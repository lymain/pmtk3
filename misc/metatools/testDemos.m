function testDemos()
%% Autogenerated by makeTestDemos()


errors = {};

try
    close all hidden;
    IPFdemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'IPFdemo'}]; 
end


try
    close all hidden;
    IPFdemo3Wrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'IPFdemo3'}]; 
end


try
    close all hidden;
    LMSdemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'LMSdemo'}]; 
end


try
    close all hidden;
    NIXdemo2Wrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'NIXdemo2'}]; 
end


try
    close all hidden;
    PRhandWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'PRhand'}]; 
end


try
    close all hidden;
    ROChandWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'ROChand'}]; 
end


try
    close all hidden;
    agglomDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'agglomDemo'}]; 
end


try
    close all hidden;
    anscombeWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'anscombe'}]; 
end


try
    close all hidden;
    bayesLinRegDemo2dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'bayesLinRegDemo2d'}]; 
end


try
    close all hidden;
    bayesTtestDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'bayesTtestDemo'}]; 
end


try
    close all hidden;
    bayesfactorGeneDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'bayesfactorGeneDemo'}]; 
end


try
    close all hidden;
    bernoulliBetaSequentialUpdateWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'bernoulliBetaSequentialUpdate'}]; 
end


try
    close all hidden;
    bernoulliEntropyFigWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'bernoulliEntropyFig'}]; 
end


try
    close all hidden;
    betaBinomPostPredDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'betaBinomPostPredDemo'}]; 
end


try
    close all hidden;
    betaCredibleIntWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'betaCredibleInt'}]; 
end


try
    close all hidden;
    betaHPDWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'betaHPD'}]; 
end


try
    close all hidden;
    betaMCdemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'betaMCdemo'}]; 
end


try
    close all hidden;
    betaPlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'betaPlotDemo'}]; 
end


try
    close all hidden;
    betaSampleDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'betaSampleDemo'}]; 
end


try
    close all hidden;
    biasVarModelComplexityWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'biasVarModelComplexity'}]; 
end


try
    close all hidden;
    bigOWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'bigO'}]; 
end


try
    close all hidden;
    bimodalDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'bimodalDemo'}]; 
end


try
    close all hidden;
    binomDistPlotWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'binomDistPlot'}]; 
end


try
    close all hidden;
    binomialBetaPosteriorDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'binomialBetaPosteriorDemo'}]; 
end


try
    close all hidden;
    bootstrapDemoBerWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'bootstrapDemoBer'}]; 
end


try
    close all hidden;
    boundOptPictureWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'boundOptPicture'}]; 
end


try
    close all hidden;
    boxplotMorleyWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'boxplotMorley'}]; 
end


try
    close all hidden;
    cancerHighDimClassifDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'cancerHighDimClassifDemo'}]; 
end


try
    close all hidden;
    cancerRatesEbWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'cancerRatesEb'}]; 
end


try
    close all hidden;
    cancerRatesMhWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'cancerRatesMh'}]; 
end


try
    close all hidden;
    casinoDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'casinoDemo'}]; 
end


try
    close all hidden;
    centralLimitDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'centralLimitDemo'}]; 
end


try
    close all hidden;
    changeOfVarsDemo1dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'changeOfVarsDemo1d'}]; 
end


try
    close all hidden;
    changeOfVarsDemoPolarWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'changeOfVarsDemoPolar'}]; 
end


try
    close all hidden;
    chowliuTreeDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'chowliuTreeDemo'}]; 
end


try
    close all hidden;
    clusterYeastWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'clusterYeast'}]; 
end


try
    close all hidden;
    coinsModelSelDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'coinsModelSelDemo'}]; 
end


try
    close all hidden;
    confintDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'confintDemo'}]; 
end


try
    close all hidden;
    conjugateFnExpWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'conjugateFnExp'}]; 
end


try
    close all hidden;
    conjugateFnExpLowerBoundWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'conjugateFnExpLowerBound'}]; 
end


try
    close all hidden;
    conjugateFunctionWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'conjugateFunction'}]; 
end


try
    close all hidden;
    contoursSSEdemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'contoursSSEdemo'}]; 
end


try
    close all hidden;
    convRateDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'convRateDemo'}]; 
end


try
    close all hidden;
    convexFnWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'convexFn'}]; 
end


try
    close all hidden;
    coordDescentDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'coordDescentDemo'}]; 
end


try
    close all hidden;
    dagStructLearnDemoCollegeCompleteDataWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'dagStructLearnDemoCollegeCompleteData'}]; 
end


try
    close all hidden;
    dboundaries3bumpsWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'dboundaries3bumps'}]; 
end


try
    close all hidden;
    decisionBoundaryLinearVSwigglyWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'decisionBoundaryLinearVSwiggly'}]; 
end


try
    close all hidden;
    deflationDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'deflationDemo'}]; 
end


try
    close all hidden;
    demoLagrangeWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'demoLagrange'}]; 
end


try
    close all hidden;
    demoMinfuncWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'demoMinfunc'}]; 
end


try
    close all hidden;
    demoMinfuncHighdimWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'demoMinfuncHighdim'}]; 
end


try
    close all hidden;
    demoPeaksTrajWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'demoPeaksTraj'}]; 
end


try
    close all hidden;
    demoRosen2dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'demoRosen2d'}]; 
end


try
    close all hidden;
    demoRosenConstrainedWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'demoRosenConstrained'}]; 
end


try
    close all hidden;
    demoRosenPlot2dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'demoRosenPlot2d'}]; 
end


try
    close all hidden;
    demoSteepestDescentWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'demoSteepestDescent'}]; 
end


try
    close all hidden;
    demoSteepestDescentRosenWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'demoSteepestDescentRosen'}]; 
end


try
    close all hidden;
    derivComplexTrickWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'derivComplexTrick'}]; 
end


try
    close all hidden;
    dirichletHistogramDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'dirichletHistogramDemo'}]; 
end


try
    close all hidden;
    discreteDagSmallStructureLearnDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'discreteDagSmallStructureLearnDemo'}]; 
end


try
    close all hidden;
    discreteProbDistFigWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'discreteProbDistFig'}]; 
end


try
    close all hidden;
    discreteProbDistroFigWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'discreteProbDistroFig'}]; 
end


try
    close all hidden;
    discrimAnalysisDboundariesDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'discrimAnalysisDboundariesDemo'}]; 
end


try
    close all hidden;
    discrimAnalysisFisherIrisDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'discrimAnalysisFisherIrisDemo'}]; 
end


try
    close all hidden;
    discrimAnalysisHeightWeightDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'discrimAnalysisHeightWeightDemo'}]; 
end


try
    close all hidden;
    emLogLikelihoodMaxWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'emLogLikelihoodMax'}]; 
end


try
    close all hidden;
    epigraphWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'epigraph'}]; 
end


try
    close all hidden;
    errorVsRegularizationWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'errorVsRegularization'}]; 
end


try
    close all hidden;
    faBiplotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'faBiplotDemo'}]; 
end


try
    close all hidden;
    fisherDiscrimVowelDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'fisherDiscrimVowelDemo'}]; 
end


try
    close all hidden;
    fisherLDAdemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'fisherLDAdemo'}]; 
end


try
    close all hidden;
    fisheririsDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'fisheririsDemo'}]; 
end


try
    close all hidden;
    fwdBackDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'fwdBackDemo'}]; 
end


try
    close all hidden;
    gammaPlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gammaPlotDemo'}]; 
end


try
    close all hidden;
    gammaRainfallDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gammaRainfallDemo'}]; 
end


try
    close all hidden;
    gauss2dMargCondPlotWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gauss2dMargCondPlot'}]; 
end


try
    close all hidden;
    gaussBayesMultiPointsWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussBayesMultiPoints'}]; 
end


try
    close all hidden;
    gaussBayesUnequalCovWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussBayesUnequalCov'}]; 
end


try
    close all hidden;
    gaussCondition2DdemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussCondition2Ddemo'}]; 
end


try
    close all hidden;
    gaussHeightWeightWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussHeightWeight'}]; 
end


try
    close all hidden;
    gaussImputationCompareWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussImputationCompare'}]; 
end


try
    close all hidden;
    gaussImputationDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussImputationDemo'}]; 
end


try
    close all hidden;
    gaussImputationDemoColorHintonDiagWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussImputationDemoColorHintonDiag'}]; 
end


try
    close all hidden;
    gaussImputationDemoOldWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussImputationDemoOld'}]; 
end


try
    close all hidden;
    gaussImputationGibbsDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussImputationGibbsDemo'}]; 
end


try
    close all hidden;
    gaussImputationICMDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussImputationICMDemo'}]; 
end


try
    close all hidden;
    gaussImputationPimaWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussImputationPima'}]; 
end


try
    close all hidden;
    gaussInferMuSigmaDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussInferMuSigmaDemo'}]; 
end


try
    close all hidden;
    gaussInferParamsMean1dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussInferParamsMean1d'}]; 
end


try
    close all hidden;
    gaussInferParamsMean2dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussInferParamsMean2d'}]; 
end


try
    close all hidden;
    gaussPlot2DdemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussPlot2Ddemo'}]; 
end


try
    close all hidden;
    gaussPlot2dDemo2Wrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussPlot2dDemo2'}]; 
end


try
    close all hidden;
    gaussPlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussPlotDemo'}]; 
end


try
    close all hidden;
    gaussSeqUpdateSigma1DWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussSeqUpdateSigma1D'}]; 
end


try
    close all hidden;
    gaussSeqlUpdateMuSigma1DWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussSeqlUpdateMuSigma1D'}]; 
end


try
    close all hidden;
    gaussVsStudentOutlierDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussVsStudentOutlierDemo'}]; 
end


try
    close all hidden;
    gaussianEllipsoidsWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gaussianEllipsoids'}]; 
end


try
    close all hidden;
    generativeVsDiscrimWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'generativeVsDiscrim'}]; 
end


try
    close all hidden;
    generativeVsDiscrim2Wrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'generativeVsDiscrim2'}]; 
end


try
    close all hidden;
    generativeVsDiscrim3Wrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'generativeVsDiscrim3'}]; 
end


try
    close all hidden;
    ggmFitDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'ggmFitDemo'}]; 
end


try
    close all hidden;
    ggmLassoDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'ggmLassoDemo'}]; 
end


try
    close all hidden;
    gmmSingularityWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gmmSingularity'}]; 
end


try
    close all hidden;
    gpDemoChangeHparams2dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gpDemoChangeHparams2d'}]; 
end


try
    close all hidden;
    gprDemoChangeHparamsWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gprDemoChangeHparams'}]; 
end


try
    close all hidden;
    gprDemoNoiseFreeWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'gprDemoNoiseFree'}]; 
end


try
    close all hidden;
    hastieCvsGammaDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'hastieCvsGammaDemo'}]; 
end


try
    close all hidden;
    hastieSvmLrDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'hastieSvmLrDemo'}]; 
end


try
    close all hidden;
    hclustYeastDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'hclustYeastDemo'}]; 
end


try
    close all hidden;
    healthyLevelsWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'healthyLevels'}]; 
end


try
    close all hidden;
    heteroscedasticDataPlotWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'heteroscedasticDataPlot'}]; 
end


try
    close all hidden;
    hingeLossPlotWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'hingeLossPlot'}]; 
end


try
    close all hidden;
    hingePlotWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'hingePlot'}]; 
end


try
    close all hidden;
    hmmDiscreteTestWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'hmmDiscreteTest'}]; 
end


try
    close all hidden;
    hmmGaussTestWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'hmmGaussTest'}]; 
end


try
    close all hidden;
    hmmSelfLoopDistWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'hmmSelfLoopDist'}]; 
end


try
    close all hidden;
    hoffNormalmsePlotsWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'hoffNormalmsePlots'}]; 
end


try
    close all hidden;
    hopfieldDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'hopfieldDemo'}]; 
end


try
    close all hidden;
    huberLossDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'huberLossDemo'}]; 
end


try
    close all hidden;
    imputationGeneMicroarrayDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'imputationGeneMicroarrayDemo'}]; 
end


try
    close all hidden;
    imputationMixedAdultDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'imputationMixedAdultDemo'}]; 
end


try
    close all hidden;
    invGammaPlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'invGammaPlotDemo'}]; 
end


try
    close all hidden;
    isolatedWordClassificationWithHmmsDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'isolatedWordClassificationWithHmmsDemo'}]; 
end


try
    close all hidden;
    jensensInequalityFigureWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'jensensInequalityFigure'}]; 
end


try
    close all hidden;
    kalmanTrackingDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'kalmanTrackingDemo'}]; 
end


try
    close all hidden;
    kmeansDemoFaithfulWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'kmeansDemoFaithful'}]; 
end


try
    close all hidden;
    kmeansHeightWeightWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'kmeansHeightWeight'}]; 
end


try
    close all hidden;
    kmeansModelSel1dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'kmeansModelSel1d'}]; 
end


try
    close all hidden;
    kmeansModelSel2dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'kmeansModelSel2d'}]; 
end


try
    close all hidden;
    kmeansYeastDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'kmeansYeastDemo'}]; 
end


try
    close all hidden;
    kmedoidsDemoFaithfulWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'kmedoidsDemoFaithful'}]; 
end


try
    close all hidden;
    knnClassifyDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'knnClassifyDemo'}]; 
end


try
    close all hidden;
    knnClassifyDemo2Wrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'knnClassifyDemo2'}]; 
end


try
    close all hidden;
    knnDensityEstimationDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'knnDensityEstimationDemo'}]; 
end


try
    close all hidden;
    knnVoronoiWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'knnVoronoi'}]; 
end


try
    close all hidden;
    laplacePlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'laplacePlotDemo'}]; 
end


try
    close all hidden;
    lassoPathProstateWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'lassoPathProstate'}]; 
end


try
    close all hidden;
    lassoPostPlotWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'lassoPostPlot'}]; 
end


try
    close all hidden;
    leastSquaresProjectionWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'leastSquaresProjection'}]; 
end


try
    close all hidden;
    linregAllSubsetsGraycodeDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregAllSubsetsGraycodeDemo'}]; 
end


try
    close all hidden;
    linregBFCaterpillarWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregBFCaterpillar'}]; 
end


try
    close all hidden;
    linregBayesCaterpillarWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregBayesCaterpillar'}]; 
end


try
    close all hidden;
    linregCensoredSchmeeHahnDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregCensoredSchmeeHahnDemo'}]; 
end


try
    close all hidden;
    linregCvPolyVsRegDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregCvPolyVsRegDemo'}]; 
end


try
    close all hidden;
    linregDemo1Wrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregDemo1'}]; 
end


try
    close all hidden;
    linregFitL1TestWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregFitL1Test'}]; 
end


try
    close all hidden;
    linregFitL2TestWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregFitL2Test'}]; 
end


try
    close all hidden;
    linregFitTestWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregFitTest'}]; 
end


try
    close all hidden;
    linregFitTestSimpleWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregFitTestSimple'}]; 
end


try
    close all hidden;
    linregFreqCaterpillarWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregFreqCaterpillar'}]; 
end


try
    close all hidden;
    linregGroupLassoDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregGroupLassoDemo'}]; 
end


try
    close all hidden;
    linregGroupLassoEmDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregGroupLassoEmDemo'}]; 
end


try
    close all hidden;
    linregLogTransformDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregLogTransformDemo'}]; 
end


try
    close all hidden;
    linregMlcompDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregMlcompDemo'}]; 
end


try
    close all hidden;
    linregNetlabPolyVsDegreeDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregNetlabPolyVsDegreeDemo'}]; 
end


try
    close all hidden;
    linregNetlabPolyVsNDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregNetlabPolyVsNDemo'}]; 
end


try
    close all hidden;
    linregNetlabPolyVsRegDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregNetlabPolyVsRegDemo'}]; 
end


try
    close all hidden;
    linregOnlineDemoKalmanWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregOnlineDemoKalman'}]; 
end


try
    close all hidden;
    linregPolyVsDegreeWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregPolyVsDegree'}]; 
end


try
    close all hidden;
    linregPolyVsNWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregPolyVsN'}]; 
end


try
    close all hidden;
    linregPolyVsRegWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregPolyVsReg'}]; 
end


try
    close all hidden;
    linregPostPredDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregPostPredDemo'}]; 
end


try
    close all hidden;
    linregRbfDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregRbfDemo'}]; 
end


try
    close all hidden;
    linregRobustDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregRobustDemo'}]; 
end


try
    close all hidden;
    linregSparseEmBiscuitsDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregSparseEmBiscuitsDemo'}]; 
end


try
    close all hidden;
    linregStudentStacklossDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregStudentStacklossDemo'}]; 
end


try
    close all hidden;
    linregStudentTestWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregStudentTest'}]; 
end


try
    close all hidden;
    linregWedgeDemo2Wrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'linregWedgeDemo2'}]; 
end


try
    close all hidden;
    localMinima1dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'localMinima1d'}]; 
end


try
    close all hidden;
    logconWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'logcon'}]; 
end


try
    close all hidden;
    logregBasisFnDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'logregBasisFnDemo'}]; 
end


try
    close all hidden;
    logregDemoGirolamiWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'logregDemoGirolami'}]; 
end


try
    close all hidden;
    logregFitTestWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'logregFitTest'}]; 
end


try
    close all hidden;
    logregGradeMHWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'logregGradeMH'}]; 
end


try
    close all hidden;
    logregKernelCrabsDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'logregKernelCrabsDemo'}]; 
end


try
    close all hidden;
    logregL2FitTestWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'logregL2FitTest'}]; 
end


try
    close all hidden;
    logregMultinomKernelDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'logregMultinomKernelDemo'}]; 
end


try
    close all hidden;
    logregMultinomKernelMinfuncDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'logregMultinomKernelMinfuncDemo'}]; 
end


try
    close all hidden;
    logregMultinomMinfuncDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'logregMultinomMinfuncDemo'}]; 
end


try
    close all hidden;
    logregSATdemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'logregSATdemo'}]; 
end


try
    close all hidden;
    logregXorDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'logregXorDemo'}]; 
end


try
    close all hidden;
    lossFunctionFigWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'lossFunctionFig'}]; 
end


try
    close all hidden;
    lungcancerGMdemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'lungcancerGMdemo'}]; 
end


try
    close all hidden;
    lungcancerGMdemo2Wrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'lungcancerGMdemo2'}]; 
end


try
    close all hidden;
    mcEstimatePiWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mcEstimatePi'}]; 
end


try
    close all hidden;
    mcQuantileDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mcQuantileDemo'}]; 
end


try
    close all hidden;
    mcmcMvn2dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mcmcMvn2d'}]; 
end


try
    close all hidden;
    memoryMapDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'memoryMapDemo'}]; 
end


try
    close all hidden;
    mhGmmDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mhGmmDemo'}]; 
end


try
    close all hidden;
    miDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'miDemo'}]; 
end


try
    close all hidden;
    misconceptionRankWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'misconceptionRank'}]; 
end


try
    close all hidden;
    mixBerMnistEMWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixBerMnistEM'}]; 
end


try
    close all hidden;
    mixBetaDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixBetaDemo'}]; 
end


try
    close all hidden;
    mixDirDnaDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixDirDnaDemo'}]; 
end


try
    close all hidden;
    mixDiscreteDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixDiscreteDemo'}]; 
end


try
    close all hidden;
    mixGaussDemoFaithfulWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixGaussDemoFaithful'}]; 
end


try
    close all hidden;
    mixGaussImputationDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixGaussImputationDemo'}]; 
end


try
    close all hidden;
    mixGaussImputationDemoOldWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixGaussImputationDemoOld'}]; 
end


try
    close all hidden;
    mixGaussImputationTestWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixGaussImputationTest'}]; 
end


try
    close all hidden;
    mixGaussLikSurfaceDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixGaussLikSurfaceDemo'}]; 
end


try
    close all hidden;
    mixGaussLikelihoodConvexHullWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixGaussLikelihoodConvexHull'}]; 
end


try
    close all hidden;
    mixGaussMLvsMAPWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixGaussMLvsMAP'}]; 
end


try
    close all hidden;
    mixGaussMultiModesPlotWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixGaussMultiModesPlot'}]; 
end


try
    close all hidden;
    mixGaussOverRelaxedEmDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixGaussOverRelaxedEmDemo'}]; 
end


try
    close all hidden;
    mixGaussPlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixGaussPlotDemo'}]; 
end


try
    close all hidden;
    mixGaussSingularityWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixGaussSingularity'}]; 
end


try
    close all hidden;
    mixGaussVbDemoFaithfulWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixGaussVbDemoFaithful'}]; 
end


try
    close all hidden;
    mixPpcaDemoNetlabWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixPpcaDemoNetlab'}]; 
end


try
    close all hidden;
    mixStudentBankruptcyDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixStudentBankruptcyDemo'}]; 
end


try
    close all hidden;
    mixStudentBankruptcyDemoHannesWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixStudentBankruptcyDemoHannes'}]; 
end


try
    close all hidden;
    mixdirDemo3Wrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mixdirDemo3'}]; 
end


try
    close all hidden;
    mlpClassifDemoSchmidtWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mlpClassifDemoSchmidt'}]; 
end


try
    close all hidden;
    mlpPriorsDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mlpPriorsDemo'}]; 
end


try
    close all hidden;
    mlpRegEvidenceDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mlpRegEvidenceDemo'}]; 
end


try
    close all hidden;
    mlpRegHmcDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mlpRegHmcDemo'}]; 
end


try
    close all hidden;
    mlpRegressDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mlpRegressDemo'}]; 
end


try
    close all hidden;
    mlpRegressDemoBishopWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mlpRegressDemoBishop'}]; 
end


try
    close all hidden;
    mlpRegressDemoSchmidtWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mlpRegressDemoSchmidt'}]; 
end


try
    close all hidden;
    mnist1NNdemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'mnist1NNdemo'}]; 
end


try
    close all hidden;
    multinomIndepLogBFWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'multinomIndepLogBF'}]; 
end


try
    close all hidden;
    multinomSamplePlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'multinomSamplePlotDemo'}]; 
end


try
    close all hidden;
    multitaskRegDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'multitaskRegDemo'}]; 
end


try
    close all hidden;
    naiveBayesBayesianDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'naiveBayesBayesianDemo'}]; 
end


try
    close all hidden;
    naiveBayesBowDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'naiveBayesBowDemo'}]; 
end


try
    close all hidden;
    naiveBayesMnistDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'naiveBayesMnistDemo'}]; 
end


try
    close all hidden;
    naiveBayesMnistSampleWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'naiveBayesMnistSample'}]; 
end


try
    close all hidden;
    newcombDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'newcombDemo'}]; 
end


try
    close all hidden;
    newsgroupsVisualizeWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'newsgroupsVisualize'}]; 
end


try
    close all hidden;
    newtonIteration1dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'newtonIteration1d'}]; 
end


try
    close all hidden;
    newtonsMethodMin1dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'newtonsMethodMin1d'}]; 
end


try
    close all hidden;
    newtonsMethodMinQuadWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'newtonsMethodMinQuad'}]; 
end


try
    close all hidden;
    newtonsMethodNonConvexWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'newtonsMethodNonConvex'}]; 
end


try
    close all hidden;
    neymanPearsonWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'neymanPearson'}]; 
end


try
    close all hidden;
    neymanPearson2Wrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'neymanPearson2'}]; 
end


try
    close all hidden;
    ngramPlotWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'ngramPlot'}]; 
end


try
    close all hidden;
    nonConvexFnWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'nonConvexFn'}]; 
end


try
    close all hidden;
    normalGammaPenaltyPlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'normalGammaPenaltyPlotDemo'}]; 
end


try
    close all hidden;
    normalGammaPlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'normalGammaPlotDemo'}]; 
end


try
    close all hidden;
    normalGammaThresholdPlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'normalGammaThresholdPlotDemo'}]; 
end


try
    close all hidden;
    numbersGameWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'numbersGame'}]; 
end


try
    close all hidden;
    optLowerboundWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'optLowerbound'}]; 
end


try
    close all hidden;
    optMaxLambdaValWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'optMaxLambdaVal'}]; 
end


try
    close all hidden;
    pagerankDemoMolerWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pagerankDemoMoler'}]; 
end


try
    close all hidden;
    pagerankDemoPmtkWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pagerankDemoPmtk'}]; 
end


try
    close all hidden;
    pagerankpowWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pagerankpow'}]; 
end


try
    close all hidden;
    pairedTestDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pairedTestDemo'}]; 
end


try
    close all hidden;
    pairedVsUnpairedTestDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pairedVsUnpairedTestDemo'}]; 
end


try
    close all hidden;
    paretoDemoTaxicabWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'paretoDemoTaxicab'}]; 
end


try
    close all hidden;
    paretoPlotWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'paretoPlot'}]; 
end


try
    close all hidden;
    parzenWindowDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'parzenWindowDemo'}]; 
end


try
    close all hidden;
    pcaDemo2dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pcaDemo2d'}]; 
end


try
    close all hidden;
    pcaDemo2dto10dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pcaDemo2dto10d'}]; 
end


try
    close all hidden;
    pcaDemo3dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pcaDemo3d'}]; 
end


try
    close all hidden;
    pcaDemoHeightWeightWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pcaDemoHeightWeight'}]; 
end


try
    close all hidden;
    pcaDigitsVis10classesWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pcaDigitsVis10classes'}]; 
end


try
    close all hidden;
    pcaDigitsVisGridWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pcaDigitsVisGrid'}]; 
end


try
    close all hidden;
    pcaEmTestWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pcaEmTest'}]; 
end


try
    close all hidden;
    pcaFaceDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pcaFaceDemo'}]; 
end


try
    close all hidden;
    pcaImageDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pcaImageDemo'}]; 
end


try
    close all hidden;
    pcaOverfitDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pcaOverfitDemo'}]; 
end


try
    close all hidden;
    pcaTimingTestWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'pcaTimingTest'}]; 
end


try
    close all hidden;
    peaksPlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'peaksPlotDemo'}]; 
end


try
    close all hidden;
    piecewiseLinearSurfaceWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'piecewiseLinearSurface'}]; 
end


try
    close all hidden;
    plotDirichlet3dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'plotDirichlet3d'}]; 
end


try
    close all hidden;
    plotMFCCWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'plotMFCC'}]; 
end


try
    close all hidden;
    plotNoLocalMinWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'plotNoLocalMin'}]; 
end


try
    close all hidden;
    plotPdfCdfDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'plotPdfCdfDemo'}]; 
end


try
    close all hidden;
    poissonPlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'poissonPlotDemo'}]; 
end


try
    close all hidden;
    polyfitNoErrorBarsWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'polyfitNoErrorBars'}]; 
end


try
    close all hidden;
    postDensityIntervalsWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'postDensityIntervals'}]; 
end


try
    close all hidden;
    powerMethodDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'powerMethodDemo'}]; 
end


try
    close all hidden;
    ppcaDemo2dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'ppcaDemo2d'}]; 
end


try
    close all hidden;
    ppcaDemoNetlabWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'ppcaDemoNetlab'}]; 
end


try
    close all hidden;
    ppcaDemoOilflowMissingWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'ppcaDemoOilflowMissing'}]; 
end


try
    close all hidden;
    ppcaEmTestWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'ppcaEmTest'}]; 
end


try
    close all hidden;
    ppcaEvidenceDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'ppcaEvidenceDemo'}]; 
end


try
    close all hidden;
    ppcaVBdemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'ppcaVBdemo'}]; 
end


try
    close all hidden;
    probitRegDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'probitRegDemo'}]; 
end


try
    close all hidden;
    probitVsLogregCrabsDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'probitVsLogregCrabsDemo'}]; 
end


try
    close all hidden;
    prostateComparisonWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'prostateComparison'}]; 
end


try
    close all hidden;
    prostateScatterDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'prostateScatterDemo'}]; 
end


try
    close all hidden;
    prostateSubsetsWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'prostateSubsets'}]; 
end


try
    close all hidden;
    qpDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'qpDemo'}]; 
end


try
    close all hidden;
    quantileDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'quantileDemo'}]; 
end


try
    close all hidden;
    randomWalk0to20DemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'randomWalk0to20Demo'}]; 
end


try
    close all hidden;
    rankDefDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'rankDefDemo'}]; 
end


try
    close all hidden;
    rbfGramDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'rbfGramDemo'}]; 
end


try
    close all hidden;
    rbfNetworkSarcosDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'rbfNetworkSarcosDemo'}]; 
end


try
    close all hidden;
    relevanceNetworkNewsgroupDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'relevanceNetworkNewsgroupDemo'}]; 
end


try
    close all hidden;
    residualsDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'residualsDemo'}]; 
end


try
    close all hidden;
    ridgePathProstateWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'ridgePathProstate'}]; 
end


try
    close all hidden;
    riskFnBernoulliWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'riskFnBernoulli'}]; 
end


try
    close all hidden;
    riskFnGaussWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'riskFnGauss'}]; 
end


try
    close all hidden;
    robustDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'robustDemo'}]; 
end


try
    close all hidden;
    robustPdfPlotWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'robustPdfPlot'}]; 
end


try
    close all hidden;
    rosen2dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'rosen2d'}]; 
end


try
    close all hidden;
    rotationDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'rotationDemo'}]; 
end


try
    close all hidden;
    saCoolingScheduleWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'saCoolingSchedule'}]; 
end


try
    close all hidden;
    saDemoCamelWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'saDemoCamel'}]; 
end


try
    close all hidden;
    saDemoHistoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'saDemoHisto'}]; 
end


try
    close all hidden;
    saDemoMOGWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'saDemoMOG'}]; 
end


try
    close all hidden;
    saDemoPeaksWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'saDemoPeaks'}]; 
end


try
    close all hidden;
    saddleWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'saddle'}]; 
end


try
    close all hidden;
    samplingDistGaussShrinkageWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'samplingDistGaussShrinkage'}]; 
end


try
    close all hidden;
    scadPlotWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'scadPlot'}]; 
end


try
    close all hidden;
    sensorFusion2dWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'sensorFusion2d'}]; 
end


try
    close all hidden;
    sensorFusionUnknownPrecWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'sensorFusionUnknownPrec'}]; 
end


try
    close all hidden;
    seqlogoDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'seqlogoDemo'}]; 
end


try
    close all hidden;
    shatteredSinWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'shatteredSin'}]; 
end


try
    close all hidden;
    shrinkageDemoBaseballWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'shrinkageDemoBaseball'}]; 
end


try
    close all hidden;
    shrinkcovDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'shrinkcovDemo'}]; 
end


try
    close all hidden;
    shrunkenCentroidsSRBCTdemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'shrunkenCentroidsSRBCTdemo'}]; 
end


try
    close all hidden;
    shuffledDigitsDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'shuffledDigitsDemo'}]; 
end


try
    close all hidden;
    sigmoidPlotWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'sigmoidPlot'}]; 
end


try
    close all hidden;
    sigmoidplot2DWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'sigmoidplot2D'}]; 
end


try
    close all hidden;
    softmaxDemo2Wrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'softmaxDemo2'}]; 
end


try
    close all hidden;
    sparseLinRegBabackDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'sparseLinRegBabackDemo'}]; 
end


try
    close all hidden;
    sparseLinRegMargDistDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'sparseLinRegMargDistDemo'}]; 
end


try
    close all hidden;
    sparseSensingDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'sparseSensingDemo'}]; 
end


try
    close all hidden;
    sprinklerGMdemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'sprinklerGMdemo'}]; 
end


try
    close all hidden;
    steepestDescentDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'steepestDescentDemo'}]; 
end


try
    close all hidden;
    steepestDescentDemoRssWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'steepestDescentDemoRss'}]; 
end


try
    close all hidden;
    studentFitDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'studentFitDemo'}]; 
end


try
    close all hidden;
    studentFitMultiDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'studentFitMultiDemo'}]; 
end


try
    close all hidden;
    studentPlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'studentPlotDemo'}]; 
end


try
    close all hidden;
    studentVsGaussWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'studentVsGauss'}]; 
end


try
    close all hidden;
    subgradientWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'subgradient'}]; 
end


try
    close all hidden;
    surfaceFitDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'surfaceFitDemo'}]; 
end


try
    close all hidden;
    surferWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'surfer'}]; 
end


try
    close all hidden;
    svdImageDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'svdImageDemo'}]; 
end


try
    close all hidden;
    svmBinaryClassifBishopDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'svmBinaryClassifBishopDemo'}]; 
end


try
    close all hidden;
    svmCgammaDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'svmCgammaDemo'}]; 
end


try
    close all hidden;
    svmCrabsDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'svmCrabsDemo'}]; 
end


try
    close all hidden;
    svmFitTestWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'svmFitTest'}]; 
end


try
    close all hidden;
    svmLogregComparisonWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'svmLogregComparison'}]; 
end


try
    close all hidden;
    svmOneVsRestDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'svmOneVsRestDemo'}]; 
end


try
    close all hidden;
    svmRegrDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'svmRegrDemo'}]; 
end


try
    close all hidden;
    svmSmoothRegrDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'svmSmoothRegrDemo'}]; 
end


try
    close all hidden;
    tanhPlotWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'tanhPlot'}]; 
end


try
    close all hidden;
    testSprinklerDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'testSprinklerDemo'}]; 
end


try
    close all hidden;
    tikhonovDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'tikhonovDemo'}]; 
end


try
    close all hidden;
    twoPowerCurvesWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'twoPowerCurves'}]; 
end


try
    close all hidden;
    unigaussVbDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'unigaussVbDemo'}]; 
end


try
    close all hidden;
    unpairedTestHandednessDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'unpairedTestHandednessDemo'}]; 
end


try
    close all hidden;
    varSelDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'varSelDemo'}]; 
end


try
    close all hidden;
    vqDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'vqDemo'}]; 
end


try
    close all hidden;
    wiPlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'wiPlotDemo'}]; 
end


try
    close all hidden;
    wishPlotDemoWrapper;
catch %#ok
    fprintf('****ERROR****')
    errors = [errors, {'wishPlotDemo'}]; 
end

writeText(errors, 'octaveErrorReport.txt'); 
end


function IPFdemoWrapper
    IPFdemo;
end


function IPFdemo3Wrapper
    IPFdemo3;
end


function LMSdemoWrapper
    LMSdemo;
end


function NIXdemo2Wrapper
    NIXdemo2;
end


function PRhandWrapper
    PRhand;
end


function ROChandWrapper
    ROChand;
end


function agglomDemoWrapper
    agglomDemo;
end


function anscombeWrapper
    anscombe;
end


function bayesLinRegDemo2dWrapper
    bayesLinRegDemo2d;
end


function bayesTtestDemoWrapper
    bayesTtestDemo;
end


function bayesfactorGeneDemoWrapper
    bayesfactorGeneDemo;
end


function bernoulliBetaSequentialUpdateWrapper
    bernoulliBetaSequentialUpdate;
end


function bernoulliEntropyFigWrapper
    bernoulliEntropyFig;
end


function betaBinomPostPredDemoWrapper
    betaBinomPostPredDemo;
end


function betaCredibleIntWrapper
    betaCredibleInt;
end


function betaHPDWrapper
    betaHPD;
end


function betaMCdemoWrapper
    betaMCdemo;
end


function betaPlotDemoWrapper
    betaPlotDemo;
end


function betaSampleDemoWrapper
    betaSampleDemo;
end


function biasVarModelComplexityWrapper
    biasVarModelComplexity;
end


function bigOWrapper
    bigO;
end


function bimodalDemoWrapper
    bimodalDemo;
end


function binomDistPlotWrapper
    binomDistPlot;
end


function binomialBetaPosteriorDemoWrapper
    binomialBetaPosteriorDemo;
end


function bootstrapDemoBerWrapper
    bootstrapDemoBer;
end


function boundOptPictureWrapper
    boundOptPicture;
end


function boxplotMorleyWrapper
    boxplotMorley;
end


function cancerHighDimClassifDemoWrapper
    cancerHighDimClassifDemo;
end


function cancerRatesEbWrapper
    cancerRatesEb;
end


function cancerRatesMhWrapper
    cancerRatesMh;
end


function casinoDemoWrapper
    casinoDemo;
end


function centralLimitDemoWrapper
    centralLimitDemo;
end


function changeOfVarsDemo1dWrapper
    changeOfVarsDemo1d;
end


function changeOfVarsDemoPolarWrapper
    changeOfVarsDemoPolar;
end


function chowliuTreeDemoWrapper
    chowliuTreeDemo;
end


function clusterYeastWrapper
    clusterYeast;
end


function coinsModelSelDemoWrapper
    coinsModelSelDemo;
end


function confintDemoWrapper
    confintDemo;
end


function conjugateFnExpWrapper
    conjugateFnExp;
end


function conjugateFnExpLowerBoundWrapper
    conjugateFnExpLowerBound;
end


function conjugateFunctionWrapper
    conjugateFunction;
end


function contoursSSEdemoWrapper
    contoursSSEdemo;
end


function convRateDemoWrapper
    convRateDemo;
end


function convexFnWrapper
    convexFn;
end


function coordDescentDemoWrapper
    coordDescentDemo;
end


function dagStructLearnDemoCollegeCompleteDataWrapper
    dagStructLearnDemoCollegeCompleteData;
end


function dboundaries3bumpsWrapper
    dboundaries3bumps;
end


function decisionBoundaryLinearVSwigglyWrapper
    decisionBoundaryLinearVSwiggly;
end


function deflationDemoWrapper
    deflationDemo;
end


function demoLagrangeWrapper
    demoLagrange;
end


function demoMinfuncWrapper
    demoMinfunc;
end


function demoMinfuncHighdimWrapper
    demoMinfuncHighdim;
end


function demoPeaksTrajWrapper
    demoPeaksTraj;
end


function demoRosen2dWrapper
    demoRosen2d;
end


function demoRosenConstrainedWrapper
    demoRosenConstrained;
end


function demoRosenPlot2dWrapper
    demoRosenPlot2d;
end


function demoSteepestDescentWrapper
    demoSteepestDescent;
end


function demoSteepestDescentRosenWrapper
    demoSteepestDescentRosen;
end


function derivComplexTrickWrapper
    derivComplexTrick;
end


function dirichletHistogramDemoWrapper
    dirichletHistogramDemo;
end


function discreteDagSmallStructureLearnDemoWrapper
    discreteDagSmallStructureLearnDemo;
end


function discreteProbDistFigWrapper
    discreteProbDistFig;
end


function discreteProbDistroFigWrapper
    discreteProbDistroFig;
end


function discrimAnalysisDboundariesDemoWrapper
    discrimAnalysisDboundariesDemo;
end


function discrimAnalysisFisherIrisDemoWrapper
    discrimAnalysisFisherIrisDemo;
end


function discrimAnalysisHeightWeightDemoWrapper
    discrimAnalysisHeightWeightDemo;
end


function emLogLikelihoodMaxWrapper
    emLogLikelihoodMax;
end


function epigraphWrapper
    epigraph;
end


function errorVsRegularizationWrapper
    errorVsRegularization;
end


function faBiplotDemoWrapper
    faBiplotDemo;
end


function fisherDiscrimVowelDemoWrapper
    fisherDiscrimVowelDemo;
end


function fisherLDAdemoWrapper
    fisherLDAdemo;
end


function fisheririsDemoWrapper
    fisheririsDemo;
end


function fwdBackDemoWrapper
    fwdBackDemo;
end


function gammaPlotDemoWrapper
    gammaPlotDemo;
end


function gammaRainfallDemoWrapper
    gammaRainfallDemo;
end


function gauss2dMargCondPlotWrapper
    gauss2dMargCondPlot;
end


function gaussBayesMultiPointsWrapper
    gaussBayesMultiPoints;
end


function gaussBayesUnequalCovWrapper
    gaussBayesUnequalCov;
end


function gaussCondition2DdemoWrapper
    gaussCondition2Ddemo;
end


function gaussHeightWeightWrapper
    gaussHeightWeight;
end


function gaussImputationCompareWrapper
    gaussImputationCompare;
end


function gaussImputationDemoWrapper
    gaussImputationDemo;
end


function gaussImputationDemoColorHintonDiagWrapper
    gaussImputationDemoColorHintonDiag;
end


function gaussImputationDemoOldWrapper
    gaussImputationDemoOld;
end


function gaussImputationGibbsDemoWrapper
    gaussImputationGibbsDemo;
end


function gaussImputationICMDemoWrapper
    gaussImputationICMDemo;
end


function gaussImputationPimaWrapper
    gaussImputationPima;
end


function gaussInferMuSigmaDemoWrapper
    gaussInferMuSigmaDemo;
end


function gaussInferParamsMean1dWrapper
    gaussInferParamsMean1d;
end


function gaussInferParamsMean2dWrapper
    gaussInferParamsMean2d;
end


function gaussPlot2DdemoWrapper
    gaussPlot2Ddemo;
end


function gaussPlot2dDemo2Wrapper
    gaussPlot2dDemo2;
end


function gaussPlotDemoWrapper
    gaussPlotDemo;
end


function gaussSeqUpdateSigma1DWrapper
    gaussSeqUpdateSigma1D;
end


function gaussSeqlUpdateMuSigma1DWrapper
    gaussSeqlUpdateMuSigma1D;
end


function gaussVsStudentOutlierDemoWrapper
    gaussVsStudentOutlierDemo;
end


function gaussianEllipsoidsWrapper
    gaussianEllipsoids;
end


function generativeVsDiscrimWrapper
    generativeVsDiscrim;
end


function generativeVsDiscrim2Wrapper
    generativeVsDiscrim2;
end


function generativeVsDiscrim3Wrapper
    generativeVsDiscrim3;
end


function ggmFitDemoWrapper
    ggmFitDemo;
end


function ggmLassoDemoWrapper
    ggmLassoDemo;
end


function gmmSingularityWrapper
    gmmSingularity;
end


function gpDemoChangeHparams2dWrapper
    gpDemoChangeHparams2d;
end


function gprDemoChangeHparamsWrapper
    gprDemoChangeHparams;
end


function gprDemoNoiseFreeWrapper
    gprDemoNoiseFree;
end


function hastieCvsGammaDemoWrapper
    hastieCvsGammaDemo;
end


function hastieSvmLrDemoWrapper
    hastieSvmLrDemo;
end


function hclustYeastDemoWrapper
    hclustYeastDemo;
end


function healthyLevelsWrapper
    healthyLevels;
end


function heteroscedasticDataPlotWrapper
    heteroscedasticDataPlot;
end


function hingeLossPlotWrapper
    hingeLossPlot;
end


function hingePlotWrapper
    hingePlot;
end


function hmmDiscreteTestWrapper
    hmmDiscreteTest;
end


function hmmGaussTestWrapper
    hmmGaussTest;
end


function hmmSelfLoopDistWrapper
    hmmSelfLoopDist;
end


function hoffNormalmsePlotsWrapper
    hoffNormalmsePlots;
end


function hopfieldDemoWrapper
    hopfieldDemo;
end


function huberLossDemoWrapper
    huberLossDemo;
end


function imputationGeneMicroarrayDemoWrapper
    imputationGeneMicroarrayDemo;
end


function imputationMixedAdultDemoWrapper
    imputationMixedAdultDemo;
end


function invGammaPlotDemoWrapper
    invGammaPlotDemo;
end


function isolatedWordClassificationWithHmmsDemoWrapper
    isolatedWordClassificationWithHmmsDemo;
end


function jensensInequalityFigureWrapper
    jensensInequalityFigure;
end


function kalmanTrackingDemoWrapper
    kalmanTrackingDemo;
end


function kmeansDemoFaithfulWrapper
    kmeansDemoFaithful;
end


function kmeansHeightWeightWrapper
    kmeansHeightWeight;
end


function kmeansModelSel1dWrapper
    kmeansModelSel1d;
end


function kmeansModelSel2dWrapper
    kmeansModelSel2d;
end


function kmeansYeastDemoWrapper
    kmeansYeastDemo;
end


function kmedoidsDemoFaithfulWrapper
    kmedoidsDemoFaithful;
end


function knnClassifyDemoWrapper
    knnClassifyDemo;
end


function knnClassifyDemo2Wrapper
    knnClassifyDemo2;
end


function knnDensityEstimationDemoWrapper
    knnDensityEstimationDemo;
end


function knnVoronoiWrapper
    knnVoronoi;
end


function laplacePlotDemoWrapper
    laplacePlotDemo;
end


function lassoPathProstateWrapper
    lassoPathProstate;
end


function lassoPostPlotWrapper
    lassoPostPlot;
end


function leastSquaresProjectionWrapper
    leastSquaresProjection;
end


function linregAllSubsetsGraycodeDemoWrapper
    linregAllSubsetsGraycodeDemo;
end


function linregBFCaterpillarWrapper
    linregBFCaterpillar;
end


function linregBayesCaterpillarWrapper
    linregBayesCaterpillar;
end


function linregCensoredSchmeeHahnDemoWrapper
    linregCensoredSchmeeHahnDemo;
end


function linregCvPolyVsRegDemoWrapper
    linregCvPolyVsRegDemo;
end


function linregDemo1Wrapper
    linregDemo1;
end


function linregFitL1TestWrapper
    linregFitL1Test;
end


function linregFitL2TestWrapper
    linregFitL2Test;
end


function linregFitTestWrapper
    linregFitTest;
end


function linregFitTestSimpleWrapper
    linregFitTestSimple;
end


function linregFreqCaterpillarWrapper
    linregFreqCaterpillar;
end


function linregGroupLassoDemoWrapper
    linregGroupLassoDemo;
end


function linregGroupLassoEmDemoWrapper
    linregGroupLassoEmDemo;
end


function linregLogTransformDemoWrapper
    linregLogTransformDemo;
end


function linregMlcompDemoWrapper
    linregMlcompDemo;
end


function linregNetlabPolyVsDegreeDemoWrapper
    linregNetlabPolyVsDegreeDemo;
end


function linregNetlabPolyVsNDemoWrapper
    linregNetlabPolyVsNDemo;
end


function linregNetlabPolyVsRegDemoWrapper
    linregNetlabPolyVsRegDemo;
end


function linregOnlineDemoKalmanWrapper
    linregOnlineDemoKalman;
end


function linregPolyVsDegreeWrapper
    linregPolyVsDegree;
end


function linregPolyVsNWrapper
    linregPolyVsN;
end


function linregPolyVsRegWrapper
    linregPolyVsReg;
end


function linregPostPredDemoWrapper
    linregPostPredDemo;
end


function linregRbfDemoWrapper
    linregRbfDemo;
end


function linregRobustDemoWrapper
    linregRobustDemo;
end


function linregSparseEmBiscuitsDemoWrapper
    linregSparseEmBiscuitsDemo;
end


function linregStudentStacklossDemoWrapper
    linregStudentStacklossDemo;
end


function linregStudentTestWrapper
    linregStudentTest;
end


function linregWedgeDemo2Wrapper
    linregWedgeDemo2;
end


function localMinima1dWrapper
    localMinima1d;
end


function logconWrapper
    logcon;
end


function logregBasisFnDemoWrapper
    logregBasisFnDemo;
end


function logregDemoGirolamiWrapper
    logregDemoGirolami;
end


function logregFitTestWrapper
    logregFitTest;
end


function logregGradeMHWrapper
    logregGradeMH;
end


function logregKernelCrabsDemoWrapper
    logregKernelCrabsDemo;
end


function logregL2FitTestWrapper
    logregL2FitTest;
end


function logregMultinomKernelDemoWrapper
    logregMultinomKernelDemo;
end


function logregMultinomKernelMinfuncDemoWrapper
    logregMultinomKernelMinfuncDemo;
end


function logregMultinomMinfuncDemoWrapper
    logregMultinomMinfuncDemo;
end


function logregSATdemoWrapper
    logregSATdemo;
end


function logregXorDemoWrapper
    logregXorDemo;
end


function lossFunctionFigWrapper
    lossFunctionFig;
end


function lungcancerGMdemoWrapper
    lungcancerGMdemo;
end


function lungcancerGMdemo2Wrapper
    lungcancerGMdemo2;
end


function mcEstimatePiWrapper
    mcEstimatePi;
end


function mcQuantileDemoWrapper
    mcQuantileDemo;
end


function mcmcMvn2dWrapper
    mcmcMvn2d;
end


function memoryMapDemoWrapper
    memoryMapDemo;
end


function mhGmmDemoWrapper
    mhGmmDemo;
end


function miDemoWrapper
    miDemo;
end


function misconceptionRankWrapper
    misconceptionRank;
end


function mixBerMnistEMWrapper
    mixBerMnistEM;
end


function mixBetaDemoWrapper
    mixBetaDemo;
end


function mixDirDnaDemoWrapper
    mixDirDnaDemo;
end


function mixDiscreteDemoWrapper
    mixDiscreteDemo;
end


function mixGaussDemoFaithfulWrapper
    mixGaussDemoFaithful;
end


function mixGaussImputationDemoWrapper
    mixGaussImputationDemo;
end


function mixGaussImputationDemoOldWrapper
    mixGaussImputationDemoOld;
end


function mixGaussImputationTestWrapper
    mixGaussImputationTest;
end


function mixGaussLikSurfaceDemoWrapper
    mixGaussLikSurfaceDemo;
end


function mixGaussLikelihoodConvexHullWrapper
    mixGaussLikelihoodConvexHull;
end


function mixGaussMLvsMAPWrapper
    mixGaussMLvsMAP;
end


function mixGaussMultiModesPlotWrapper
    mixGaussMultiModesPlot;
end


function mixGaussOverRelaxedEmDemoWrapper
    mixGaussOverRelaxedEmDemo;
end


function mixGaussPlotDemoWrapper
    mixGaussPlotDemo;
end


function mixGaussSingularityWrapper
    mixGaussSingularity;
end


function mixGaussVbDemoFaithfulWrapper
    mixGaussVbDemoFaithful;
end


function mixPpcaDemoNetlabWrapper
    mixPpcaDemoNetlab;
end


function mixStudentBankruptcyDemoWrapper
    mixStudentBankruptcyDemo;
end


function mixStudentBankruptcyDemoHannesWrapper
    mixStudentBankruptcyDemoHannes;
end


function mixdirDemo3Wrapper
    mixdirDemo3;
end


function mlpClassifDemoSchmidtWrapper
    mlpClassifDemoSchmidt;
end


function mlpPriorsDemoWrapper
    mlpPriorsDemo;
end


function mlpRegEvidenceDemoWrapper
    mlpRegEvidenceDemo;
end


function mlpRegHmcDemoWrapper
    mlpRegHmcDemo;
end


function mlpRegressDemoWrapper
    mlpRegressDemo;
end


function mlpRegressDemoBishopWrapper
    mlpRegressDemoBishop;
end


function mlpRegressDemoSchmidtWrapper
    mlpRegressDemoSchmidt;
end


function mnist1NNdemoWrapper
    mnist1NNdemo;
end


function multinomIndepLogBFWrapper
    multinomIndepLogBF;
end


function multinomSamplePlotDemoWrapper
    multinomSamplePlotDemo;
end


function multitaskRegDemoWrapper
    multitaskRegDemo;
end


function naiveBayesBayesianDemoWrapper
    naiveBayesBayesianDemo;
end


function naiveBayesBowDemoWrapper
    naiveBayesBowDemo;
end


function naiveBayesMnistDemoWrapper
    naiveBayesMnistDemo;
end


function naiveBayesMnistSampleWrapper
    naiveBayesMnistSample;
end


function newcombDemoWrapper
    newcombDemo;
end


function newsgroupsVisualizeWrapper
    newsgroupsVisualize;
end


function newtonIteration1dWrapper
    newtonIteration1d;
end


function newtonsMethodMin1dWrapper
    newtonsMethodMin1d;
end


function newtonsMethodMinQuadWrapper
    newtonsMethodMinQuad;
end


function newtonsMethodNonConvexWrapper
    newtonsMethodNonConvex;
end


function neymanPearsonWrapper
    neymanPearson;
end


function neymanPearson2Wrapper
    neymanPearson2;
end


function ngramPlotWrapper
    ngramPlot;
end


function nonConvexFnWrapper
    nonConvexFn;
end


function normalGammaPenaltyPlotDemoWrapper
    normalGammaPenaltyPlotDemo;
end


function normalGammaPlotDemoWrapper
    normalGammaPlotDemo;
end


function normalGammaThresholdPlotDemoWrapper
    normalGammaThresholdPlotDemo;
end


function numbersGameWrapper
    numbersGame;
end


function optLowerboundWrapper
    optLowerbound;
end


function optMaxLambdaValWrapper
    optMaxLambdaVal;
end


function pagerankDemoMolerWrapper
    pagerankDemoMoler;
end


function pagerankDemoPmtkWrapper
    pagerankDemoPmtk;
end


function pagerankpowWrapper
    pagerankpow;
end


function pairedTestDemoWrapper
    pairedTestDemo;
end


function pairedVsUnpairedTestDemoWrapper
    pairedVsUnpairedTestDemo;
end


function paretoDemoTaxicabWrapper
    paretoDemoTaxicab;
end


function paretoPlotWrapper
    paretoPlot;
end


function parzenWindowDemoWrapper
    parzenWindowDemo;
end


function pcaDemo2dWrapper
    pcaDemo2d;
end


function pcaDemo2dto10dWrapper
    pcaDemo2dto10d;
end


function pcaDemo3dWrapper
    pcaDemo3d;
end


function pcaDemoHeightWeightWrapper
    pcaDemoHeightWeight;
end


function pcaDigitsVis10classesWrapper
    pcaDigitsVis10classes;
end


function pcaDigitsVisGridWrapper
    pcaDigitsVisGrid;
end


function pcaEmTestWrapper
    pcaEmTest;
end


function pcaFaceDemoWrapper
    pcaFaceDemo;
end


function pcaImageDemoWrapper
    pcaImageDemo;
end


function pcaOverfitDemoWrapper
    pcaOverfitDemo;
end


function pcaTimingTestWrapper
    pcaTimingTest;
end


function peaksPlotDemoWrapper
    peaksPlotDemo;
end


function piecewiseLinearSurfaceWrapper
    piecewiseLinearSurface;
end


function plotDirichlet3dWrapper
    plotDirichlet3d;
end


function plotMFCCWrapper
    plotMFCC;
end


function plotNoLocalMinWrapper
    plotNoLocalMin;
end


function plotPdfCdfDemoWrapper
    plotPdfCdfDemo;
end


function poissonPlotDemoWrapper
    poissonPlotDemo;
end


function polyfitNoErrorBarsWrapper
    polyfitNoErrorBars;
end


function postDensityIntervalsWrapper
    postDensityIntervals;
end


function powerMethodDemoWrapper
    powerMethodDemo;
end


function ppcaDemo2dWrapper
    ppcaDemo2d;
end


function ppcaDemoNetlabWrapper
    ppcaDemoNetlab;
end


function ppcaDemoOilflowMissingWrapper
    ppcaDemoOilflowMissing;
end


function ppcaEmTestWrapper
    ppcaEmTest;
end


function ppcaEvidenceDemoWrapper
    ppcaEvidenceDemo;
end


function ppcaVBdemoWrapper
    ppcaVBdemo;
end


function probitRegDemoWrapper
    probitRegDemo;
end


function probitVsLogregCrabsDemoWrapper
    probitVsLogregCrabsDemo;
end


function prostateComparisonWrapper
    prostateComparison;
end


function prostateScatterDemoWrapper
    prostateScatterDemo;
end


function prostateSubsetsWrapper
    prostateSubsets;
end


function qpDemoWrapper
    qpDemo;
end


function quantileDemoWrapper
    quantileDemo;
end


function randomWalk0to20DemoWrapper
    randomWalk0to20Demo;
end


function rankDefDemoWrapper
    rankDefDemo;
end


function rbfGramDemoWrapper
    rbfGramDemo;
end


function rbfNetworkSarcosDemoWrapper
    rbfNetworkSarcosDemo;
end


function relevanceNetworkNewsgroupDemoWrapper
    relevanceNetworkNewsgroupDemo;
end


function residualsDemoWrapper
    residualsDemo;
end


function ridgePathProstateWrapper
    ridgePathProstate;
end


function riskFnBernoulliWrapper
    riskFnBernoulli;
end


function riskFnGaussWrapper
    riskFnGauss;
end


function robustDemoWrapper
    robustDemo;
end


function robustPdfPlotWrapper
    robustPdfPlot;
end


function rosen2dWrapper
    rosen2d;
end


function rotationDemoWrapper
    rotationDemo;
end


function saCoolingScheduleWrapper
    saCoolingSchedule;
end


function saDemoCamelWrapper
    saDemoCamel;
end


function saDemoHistoWrapper
    saDemoHisto;
end


function saDemoMOGWrapper
    saDemoMOG;
end


function saDemoPeaksWrapper
    saDemoPeaks;
end


function saddleWrapper
    saddle;
end


function samplingDistGaussShrinkageWrapper
    samplingDistGaussShrinkage;
end


function scadPlotWrapper
    scadPlot;
end


function sensorFusion2dWrapper
    sensorFusion2d;
end


function sensorFusionUnknownPrecWrapper
    sensorFusionUnknownPrec;
end


function seqlogoDemoWrapper
    seqlogoDemo;
end


function shatteredSinWrapper
    shatteredSin;
end


function shrinkageDemoBaseballWrapper
    shrinkageDemoBaseball;
end


function shrinkcovDemoWrapper
    shrinkcovDemo;
end


function shrunkenCentroidsSRBCTdemoWrapper
    shrunkenCentroidsSRBCTdemo;
end


function shuffledDigitsDemoWrapper
    shuffledDigitsDemo;
end


function sigmoidPlotWrapper
    sigmoidPlot;
end


function sigmoidplot2DWrapper
    sigmoidplot2D;
end


function softmaxDemo2Wrapper
    softmaxDemo2;
end


function sparseLinRegBabackDemoWrapper
    sparseLinRegBabackDemo;
end


function sparseLinRegMargDistDemoWrapper
    sparseLinRegMargDistDemo;
end


function sparseSensingDemoWrapper
    sparseSensingDemo;
end


function sprinklerGMdemoWrapper
    sprinklerGMdemo;
end


function steepestDescentDemoWrapper
    steepestDescentDemo;
end


function steepestDescentDemoRssWrapper
    steepestDescentDemoRss;
end


function studentFitDemoWrapper
    studentFitDemo;
end


function studentFitMultiDemoWrapper
    studentFitMultiDemo;
end


function studentPlotDemoWrapper
    studentPlotDemo;
end


function studentVsGaussWrapper
    studentVsGauss;
end


function subgradientWrapper
    subgradient;
end


function surfaceFitDemoWrapper
    surfaceFitDemo;
end


function surferWrapper
    surfer;
end


function svdImageDemoWrapper
    svdImageDemo;
end


function svmBinaryClassifBishopDemoWrapper
    svmBinaryClassifBishopDemo;
end


function svmCgammaDemoWrapper
    svmCgammaDemo;
end


function svmCrabsDemoWrapper
    svmCrabsDemo;
end


function svmFitTestWrapper
    svmFitTest;
end


function svmLogregComparisonWrapper
    svmLogregComparison;
end


function svmOneVsRestDemoWrapper
    svmOneVsRestDemo;
end


function svmRegrDemoWrapper
    svmRegrDemo;
end


function svmSmoothRegrDemoWrapper
    svmSmoothRegrDemo;
end


function tanhPlotWrapper
    tanhPlot;
end


function testSprinklerDemoWrapper
    testSprinklerDemo;
end


function tikhonovDemoWrapper
    tikhonovDemo;
end


function twoPowerCurvesWrapper
    twoPowerCurves;
end


function unigaussVbDemoWrapper
    unigaussVbDemo;
end


function unpairedTestHandednessDemoWrapper
    unpairedTestHandednessDemo;
end


function varSelDemoWrapper
    varSelDemo;
end


function vqDemoWrapper
    vqDemo;
end


function wiPlotDemoWrapper
    wiPlotDemo;
end


function wishPlotDemoWrapper
    wishPlotDemo;
end



function generateModelLists()
%% Make the model list html pages
% This looks for PMTKdefn tags in model constructors.
%PMTKneedsMatlab
%%

outputDir = fullfile(pmtk3Root(), 'docs', 'modelLists');
[basic, supervised, latent, graphical] = classNameMappings();
defnTag = 'PMTKdefn';


titles = {
    'Basic Models'
    'Supervised Models'
    'Latent Variable Models'
    'Graphical Models'
    };

groups = {basic, supervised, latent, graphical};
outputFile = 'modelList.html';

%%

nGroups = numel(groups);
hTables = cell(nGroups, 1);
pmtkRed = getConfigValue('PMTKred');

for j=1:nGroups
    group = groups{j};
    
    N = numel(group);
    hData = cell(N, 2);
    hData(:, 1) = group;
    for i=1:N
        constructor = sprintf('%sCreate', group{i});
        if exist(constructor, 'file')
            txt = getTagText(constructor,  defnTag);
            if ~isempty(txt)
                imgName = sprintf('%sDefn', group{i});
                hData{i, 2} = texifyFormula(txt{1}, imgName, outputDir);
            end
        end
    end
   
    hTables{j} = htmlTable(...
        'data',          hData, ...
        'dataAlign'     , 'center'                     , ...
        'colNames'      , {'Name', 'Model'}            , ...
        'doSave'        , false                        , ...
        'doShow'        , false                        , ...
        'colNameColors' , {pmtkRed, pmtkRed}           , ...
        'tableAlign'    , 'left'                       , ...
        'tableValign'   , 'top');
end


header = formatHtmlText({
  '<html><head><font align="left" style="color:%s"><h2>PMTK Models</h2></font>'
   ''
   'Revision Date: %s'
   'Autogenerated by %s'
   '</head><body>'
}, pmtkRed, date, mfilename);

footer = '</body></html>';

finalText = header;

for i=1:nGroups
    finalText = [finalText; {sprintf('<p><font align="left" style="color:%s"><h3>%s</h3></font>', pmtkRed, titles{i})}];
    finalText = [finalText; hTables(i); {'</p><br clear="all"><br><br>'}];
end


finalText = [finalText; {'<br><br>'}; {footer}];
writeText(finalText, fullfile(outputDir, outputFile)); 

end
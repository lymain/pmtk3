function exportToGoogleCode(package, username, passwd, summary, exclusions, createEmpty)
% Export package from svn, uploading the zip to the google code repository
%
% PACKAGE   -  name of svn directory
% USERNAME  -  your google code username, e.g. mattbdunham
% PASSWD    -  your autogenerated google code password, access from
%              https://code.google.com/hosting/settings
% SUMMARY   -  a summary of the version, to be displayed on the site.
% EXCLUIONS -  a cell array of directories to exclude, e.g 
%              {'docs', 'external', 'data'}
% CREATEEMPTY - a cell array of empty top level directories to add, e.g.
%              {'external', 'data'}
%%

if nargin < 4
    summary = date(); 
end
if nargin < 5
    exclusions = {'docs'}; 
end
if nargin < 6
    createEmpty = {};
end

eval(sprintf('cd(%sRoot())', package))
d = date(); d = d(d~='-');
fname = [package,'-',d,'.zip'];
fpath = fullfile(tempdir, fname);
fprintf('root directory is %s\n',pwd)
fprintf('exporting code to %s...\n', fname);
exportsvn(pwd, fpath, exclusions);
for i=1:numel(createEmpty)
   mkdir(fullfile(fpath, createEmpty{i}));  
end
if 0
    fprintf('uploading file...\n');
    uploadFn = fullfile(pmtk3Root(), 'toolbox\metatools\', 'googlecode_upload.py');
    command = sprintf('python %s -s "%s" -p "%s" -u %s -w %s "%s"', ...
        uploadFn, summary, package, username, passwd, fpath);
    fprintf('executing the following command:\n'); 
    fprintf(command); 
    fprintf('\n'); 
    [err, output] = system(command);
    if err
        error('There was a problem uploading the file:\n%s', output); 
    end
    fprintf('cleaning up...\n');
    delete(fpath)
    fprintf('done\n\n')
    web(sprintf('http://code.google.com/p/%s/downloads/list', lower(package)), '-browser')
end
end
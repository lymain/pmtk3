%% Autogenerated by makeTestDemos()


errors = {};

try
    close all hidden;
    fprintf('IPFdemo.................................')
    IPFdemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'IPFdemo'}]; 
end


try
    close all hidden;
    fprintf('IPFdemo3................................')
    IPFdemo3;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'IPFdemo3'}]; 
end


try
    close all hidden;
    fprintf('LMSdemo.................................')
    LMSdemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'LMSdemo'}]; 
end


try
    close all hidden;
    fprintf('NIXdemo2................................')
    NIXdemo2;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'NIXdemo2'}]; 
end


try
    close all hidden;
    fprintf('PRhand..................................')
    PRhand;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'PRhand'}]; 
end


try
    close all hidden;
    fprintf('ROChand.................................')
    ROChand;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'ROChand'}]; 
end


try
    close all hidden;
    fprintf('agglomDemo..............................')
    agglomDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'agglomDemo'}]; 
end


try
    close all hidden;
    fprintf('anscombe................................')
    anscombe;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'anscombe'}]; 
end


try
    close all hidden;
    fprintf('bayesLinRegDemo2d.......................')
    bayesLinRegDemo2d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'bayesLinRegDemo2d'}]; 
end


try
    close all hidden;
    fprintf('bayesTtestDemo..........................')
    bayesTtestDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'bayesTtestDemo'}]; 
end


try
    close all hidden;
    fprintf('bayesfactorGeneDemo.....................')
    bayesfactorGeneDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'bayesfactorGeneDemo'}]; 
end


try
    close all hidden;
    fprintf('bernoulliBetaSequentialUpdate...........')
    bernoulliBetaSequentialUpdate;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'bernoulliBetaSequentialUpdate'}]; 
end


try
    close all hidden;
    fprintf('bernoulliEntropyFig.....................')
    bernoulliEntropyFig;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'bernoulliEntropyFig'}]; 
end


try
    close all hidden;
    fprintf('betaBinomPostPredDemo...................')
    betaBinomPostPredDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'betaBinomPostPredDemo'}]; 
end


try
    close all hidden;
    fprintf('betaCredibleInt.........................')
    betaCredibleInt;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'betaCredibleInt'}]; 
end


try
    close all hidden;
    fprintf('betaHPD.................................')
    betaHPD;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'betaHPD'}]; 
end


try
    close all hidden;
    fprintf('betaMCdemo..............................')
    betaMCdemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'betaMCdemo'}]; 
end


try
    close all hidden;
    fprintf('betaPlotDemo............................')
    betaPlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'betaPlotDemo'}]; 
end


try
    close all hidden;
    fprintf('betaSampleDemo..........................')
    betaSampleDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'betaSampleDemo'}]; 
end


try
    close all hidden;
    fprintf('biasVarModelComplexity..................')
    biasVarModelComplexity;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'biasVarModelComplexity'}]; 
end


try
    close all hidden;
    fprintf('bigO....................................')
    bigO;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'bigO'}]; 
end


try
    close all hidden;
    fprintf('bimodalDemo.............................')
    bimodalDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'bimodalDemo'}]; 
end


try
    close all hidden;
    fprintf('binomDistPlot...........................')
    binomDistPlot;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'binomDistPlot'}]; 
end


try
    close all hidden;
    fprintf('binomialBetaPosteriorDemo...............')
    binomialBetaPosteriorDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'binomialBetaPosteriorDemo'}]; 
end


try
    close all hidden;
    fprintf('bootstrapDemoBer........................')
    bootstrapDemoBer;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'bootstrapDemoBer'}]; 
end


try
    close all hidden;
    fprintf('boundOptPicture.........................')
    boundOptPicture;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'boundOptPicture'}]; 
end


try
    close all hidden;
    fprintf('boxplotMorley...........................')
    boxplotMorley;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'boxplotMorley'}]; 
end


try
    close all hidden;
    fprintf('cancerHighDimClassifDemo................')
    cancerHighDimClassifDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'cancerHighDimClassifDemo'}]; 
end


try
    close all hidden;
    fprintf('cancerRatesEb...........................')
    cancerRatesEb;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'cancerRatesEb'}]; 
end


try
    close all hidden;
    fprintf('cancerRatesMh...........................')
    cancerRatesMh;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'cancerRatesMh'}]; 
end


try
    close all hidden;
    fprintf('casinoDemo..............................')
    casinoDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'casinoDemo'}]; 
end


try
    close all hidden;
    fprintf('centralLimitDemo........................')
    centralLimitDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'centralLimitDemo'}]; 
end


try
    close all hidden;
    fprintf('changeOfVarsDemo1d......................')
    changeOfVarsDemo1d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'changeOfVarsDemo1d'}]; 
end


try
    close all hidden;
    fprintf('changeOfVarsDemoPolar...................')
    changeOfVarsDemoPolar;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'changeOfVarsDemoPolar'}]; 
end


try
    close all hidden;
    fprintf('chowliuTreeDemo.........................')
    chowliuTreeDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'chowliuTreeDemo'}]; 
end


try
    close all hidden;
    fprintf('clusterYeast............................')
    clusterYeast;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'clusterYeast'}]; 
end


try
    close all hidden;
    fprintf('coinsModelSelDemo.......................')
    coinsModelSelDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'coinsModelSelDemo'}]; 
end


try
    close all hidden;
    fprintf('confintDemo.............................')
    confintDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'confintDemo'}]; 
end


try
    close all hidden;
    fprintf('conjugateFnExp..........................')
    conjugateFnExp;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'conjugateFnExp'}]; 
end


try
    close all hidden;
    fprintf('conjugateFnExpLowerBound................')
    conjugateFnExpLowerBound;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'conjugateFnExpLowerBound'}]; 
end


try
    close all hidden;
    fprintf('conjugateFunction.......................')
    conjugateFunction;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'conjugateFunction'}]; 
end


try
    close all hidden;
    fprintf('contoursSSEdemo.........................')
    contoursSSEdemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'contoursSSEdemo'}]; 
end


try
    close all hidden;
    fprintf('convRateDemo............................')
    convRateDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'convRateDemo'}]; 
end


try
    close all hidden;
    fprintf('convexFn................................')
    convexFn;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'convexFn'}]; 
end


try
    close all hidden;
    fprintf('coordDescentDemo........................')
    coordDescentDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'coordDescentDemo'}]; 
end


try
    close all hidden;
    fprintf('dagStructLearnDemoCollegeCompleteData...')
    dagStructLearnDemoCollegeCompleteData;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'dagStructLearnDemoCollegeCompleteData'}]; 
end


try
    close all hidden;
    fprintf('dboundaries3bumps.......................')
    dboundaries3bumps;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'dboundaries3bumps'}]; 
end


try
    close all hidden;
    fprintf('decisionBoundaryLinearVSwiggly..........')
    decisionBoundaryLinearVSwiggly;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'decisionBoundaryLinearVSwiggly'}]; 
end


try
    close all hidden;
    fprintf('deflationDemo...........................')
    deflationDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'deflationDemo'}]; 
end


try
    close all hidden;
    fprintf('demoLagrange............................')
    demoLagrange;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'demoLagrange'}]; 
end


try
    close all hidden;
    fprintf('demoMinfunc.............................')
    demoMinfunc;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'demoMinfunc'}]; 
end


try
    close all hidden;
    fprintf('demoMinfuncHighdim......................')
    demoMinfuncHighdim;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'demoMinfuncHighdim'}]; 
end


try
    close all hidden;
    fprintf('demoPeaksTraj...........................')
    demoPeaksTraj;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'demoPeaksTraj'}]; 
end


try
    close all hidden;
    fprintf('demoRosen2d.............................')
    demoRosen2d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'demoRosen2d'}]; 
end


try
    close all hidden;
    fprintf('demoRosenConstrained....................')
    demoRosenConstrained;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'demoRosenConstrained'}]; 
end


try
    close all hidden;
    fprintf('demoRosenPlot2d.........................')
    demoRosenPlot2d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'demoRosenPlot2d'}]; 
end


try
    close all hidden;
    fprintf('demoSteepestDescent.....................')
    demoSteepestDescent;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'demoSteepestDescent'}]; 
end


try
    close all hidden;
    fprintf('demoSteepestDescentRosen................')
    demoSteepestDescentRosen;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'demoSteepestDescentRosen'}]; 
end


try
    close all hidden;
    fprintf('derivComplexTrick.......................')
    derivComplexTrick;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'derivComplexTrick'}]; 
end


try
    close all hidden;
    fprintf('dirichletHistogramDemo..................')
    dirichletHistogramDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'dirichletHistogramDemo'}]; 
end


try
    close all hidden;
    fprintf('discreteDagSmallStructureLearnDemo......')
    discreteDagSmallStructureLearnDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'discreteDagSmallStructureLearnDemo'}]; 
end


try
    close all hidden;
    fprintf('discreteProbDistFig.....................')
    discreteProbDistFig;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'discreteProbDistFig'}]; 
end


try
    close all hidden;
    fprintf('discreteProbDistroFig...................')
    discreteProbDistroFig;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'discreteProbDistroFig'}]; 
end


try
    close all hidden;
    fprintf('discrimAnalysisDboundariesDemo..........')
    discrimAnalysisDboundariesDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'discrimAnalysisDboundariesDemo'}]; 
end


try
    close all hidden;
    fprintf('discrimAnalysisFisherIrisDemo...........')
    discrimAnalysisFisherIrisDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'discrimAnalysisFisherIrisDemo'}]; 
end


try
    close all hidden;
    fprintf('discrimAnalysisHeightWeightDemo.........')
    discrimAnalysisHeightWeightDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'discrimAnalysisHeightWeightDemo'}]; 
end


try
    close all hidden;
    fprintf('emLogLikelihoodMax......................')
    emLogLikelihoodMax;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'emLogLikelihoodMax'}]; 
end


try
    close all hidden;
    fprintf('epigraph................................')
    epigraph;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'epigraph'}]; 
end


try
    close all hidden;
    fprintf('errorVsRegularization...................')
    errorVsRegularization;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'errorVsRegularization'}]; 
end


try
    close all hidden;
    fprintf('faBiplotDemo............................')
    faBiplotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'faBiplotDemo'}]; 
end


try
    close all hidden;
    fprintf('fisherDiscrimVowelDemo..................')
    fisherDiscrimVowelDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'fisherDiscrimVowelDemo'}]; 
end


try
    close all hidden;
    fprintf('fisherLDAdemo...........................')
    fisherLDAdemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'fisherLDAdemo'}]; 
end


try
    close all hidden;
    fprintf('fisheririsDemo..........................')
    fisheririsDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'fisheririsDemo'}]; 
end


try
    close all hidden;
    fprintf('fwdBackDemo.............................')
    fwdBackDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'fwdBackDemo'}]; 
end


try
    close all hidden;
    fprintf('gammaPlotDemo...........................')
    gammaPlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gammaPlotDemo'}]; 
end


try
    close all hidden;
    fprintf('gammaRainfallDemo.......................')
    gammaRainfallDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gammaRainfallDemo'}]; 
end


try
    close all hidden;
    fprintf('gauss2dMargCondPlot.....................')
    gauss2dMargCondPlot;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gauss2dMargCondPlot'}]; 
end


try
    close all hidden;
    fprintf('gaussBayesMultiPoints...................')
    gaussBayesMultiPoints;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussBayesMultiPoints'}]; 
end


try
    close all hidden;
    fprintf('gaussBayesUnequalCov....................')
    gaussBayesUnequalCov;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussBayesUnequalCov'}]; 
end


try
    close all hidden;
    fprintf('gaussCondition2Ddemo....................')
    gaussCondition2Ddemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussCondition2Ddemo'}]; 
end


try
    close all hidden;
    fprintf('gaussHeightWeight.......................')
    gaussHeightWeight;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussHeightWeight'}]; 
end


try
    close all hidden;
    fprintf('gaussImputationCompare..................')
    gaussImputationCompare;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussImputationCompare'}]; 
end


try
    close all hidden;
    fprintf('gaussImputationDemo.....................')
    gaussImputationDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussImputationDemo'}]; 
end


try
    close all hidden;
    fprintf('gaussImputationDemoColorHintonDiag......')
    gaussImputationDemoColorHintonDiag;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussImputationDemoColorHintonDiag'}]; 
end


try
    close all hidden;
    fprintf('gaussImputationDemoOld..................')
    gaussImputationDemoOld;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussImputationDemoOld'}]; 
end


try
    close all hidden;
    fprintf('gaussImputationGibbsDemo................')
    gaussImputationGibbsDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussImputationGibbsDemo'}]; 
end


try
    close all hidden;
    fprintf('gaussImputationICMDemo..................')
    gaussImputationICMDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussImputationICMDemo'}]; 
end


try
    close all hidden;
    fprintf('gaussImputationPima.....................')
    gaussImputationPima;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussImputationPima'}]; 
end


try
    close all hidden;
    fprintf('gaussInferMuSigmaDemo...................')
    gaussInferMuSigmaDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussInferMuSigmaDemo'}]; 
end


try
    close all hidden;
    fprintf('gaussInferParamsMean1d..................')
    gaussInferParamsMean1d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussInferParamsMean1d'}]; 
end


try
    close all hidden;
    fprintf('gaussInferParamsMean2d..................')
    gaussInferParamsMean2d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussInferParamsMean2d'}]; 
end


try
    close all hidden;
    fprintf('gaussPlot2Ddemo.........................')
    gaussPlot2Ddemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussPlot2Ddemo'}]; 
end


try
    close all hidden;
    fprintf('gaussPlot2dDemo2........................')
    gaussPlot2dDemo2;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussPlot2dDemo2'}]; 
end


try
    close all hidden;
    fprintf('gaussPlotDemo...........................')
    gaussPlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussPlotDemo'}]; 
end


try
    close all hidden;
    fprintf('gaussSeqUpdateSigma1D...................')
    gaussSeqUpdateSigma1D;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussSeqUpdateSigma1D'}]; 
end


try
    close all hidden;
    fprintf('gaussSeqlUpdateMuSigma1D................')
    gaussSeqlUpdateMuSigma1D;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussSeqlUpdateMuSigma1D'}]; 
end


try
    close all hidden;
    fprintf('gaussVsStudentOutlierDemo...............')
    gaussVsStudentOutlierDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussVsStudentOutlierDemo'}]; 
end


try
    close all hidden;
    fprintf('gaussianEllipsoids......................')
    gaussianEllipsoids;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gaussianEllipsoids'}]; 
end


try
    close all hidden;
    fprintf('generativeVsDiscrim.....................')
    generativeVsDiscrim;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'generativeVsDiscrim'}]; 
end


try
    close all hidden;
    fprintf('generativeVsDiscrim2....................')
    generativeVsDiscrim2;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'generativeVsDiscrim2'}]; 
end


try
    close all hidden;
    fprintf('generativeVsDiscrim3....................')
    generativeVsDiscrim3;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'generativeVsDiscrim3'}]; 
end


try
    close all hidden;
    fprintf('ggmFitDemo..............................')
    ggmFitDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'ggmFitDemo'}]; 
end


try
    close all hidden;
    fprintf('ggmLassoDemo............................')
    ggmLassoDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'ggmLassoDemo'}]; 
end


try
    close all hidden;
    fprintf('gmmSingularity..........................')
    gmmSingularity;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gmmSingularity'}]; 
end


try
    close all hidden;
    fprintf('gpDemoChangeHparams2d...................')
    gpDemoChangeHparams2d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gpDemoChangeHparams2d'}]; 
end


try
    close all hidden;
    fprintf('gprDemoChangeHparams....................')
    gprDemoChangeHparams;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gprDemoChangeHparams'}]; 
end


try
    close all hidden;
    fprintf('gprDemoNoiseFree........................')
    gprDemoNoiseFree;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'gprDemoNoiseFree'}]; 
end


try
    close all hidden;
    fprintf('hastieCvsGammaDemo......................')
    hastieCvsGammaDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'hastieCvsGammaDemo'}]; 
end


try
    close all hidden;
    fprintf('hastieSvmLrDemo.........................')
    hastieSvmLrDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'hastieSvmLrDemo'}]; 
end


try
    close all hidden;
    fprintf('hclustYeastDemo.........................')
    hclustYeastDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'hclustYeastDemo'}]; 
end


try
    close all hidden;
    fprintf('healthyLevels...........................')
    healthyLevels;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'healthyLevels'}]; 
end


try
    close all hidden;
    fprintf('heteroscedasticDataPlot.................')
    heteroscedasticDataPlot;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'heteroscedasticDataPlot'}]; 
end


try
    close all hidden;
    fprintf('hingeLossPlot...........................')
    hingeLossPlot;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'hingeLossPlot'}]; 
end


try
    close all hidden;
    fprintf('hingePlot...............................')
    hingePlot;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'hingePlot'}]; 
end


try
    close all hidden;
    fprintf('hmmDiscreteTest.........................')
    hmmDiscreteTest;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'hmmDiscreteTest'}]; 
end


try
    close all hidden;
    fprintf('hmmGaussTest............................')
    hmmGaussTest;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'hmmGaussTest'}]; 
end


try
    close all hidden;
    fprintf('hmmSelfLoopDist.........................')
    hmmSelfLoopDist;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'hmmSelfLoopDist'}]; 
end


try
    close all hidden;
    fprintf('hoffNormalmsePlots......................')
    hoffNormalmsePlots;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'hoffNormalmsePlots'}]; 
end


try
    close all hidden;
    fprintf('hopfieldDemo............................')
    hopfieldDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'hopfieldDemo'}]; 
end


try
    close all hidden;
    fprintf('huberLossDemo...........................')
    huberLossDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'huberLossDemo'}]; 
end


try
    close all hidden;
    fprintf('imputationGeneMicroarrayDemo............')
    imputationGeneMicroarrayDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'imputationGeneMicroarrayDemo'}]; 
end


try
    close all hidden;
    fprintf('imputationMixedAdultDemo................')
    imputationMixedAdultDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'imputationMixedAdultDemo'}]; 
end


try
    close all hidden;
    fprintf('invGammaPlotDemo........................')
    invGammaPlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'invGammaPlotDemo'}]; 
end


try
    close all hidden;
    fprintf('isolatedWordClassificationWithHmmsDemo..')
    isolatedWordClassificationWithHmmsDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'isolatedWordClassificationWithHmmsDemo'}]; 
end


try
    close all hidden;
    fprintf('jensensInequalityFigure.................')
    jensensInequalityFigure;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'jensensInequalityFigure'}]; 
end


try
    close all hidden;
    fprintf('kalmanTrackingDemo......................')
    kalmanTrackingDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'kalmanTrackingDemo'}]; 
end


try
    close all hidden;
    fprintf('kmeansDemoFaithful......................')
    kmeansDemoFaithful;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'kmeansDemoFaithful'}]; 
end


try
    close all hidden;
    fprintf('kmeansHeightWeight......................')
    kmeansHeightWeight;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'kmeansHeightWeight'}]; 
end


try
    close all hidden;
    fprintf('kmeansModelSel1d........................')
    kmeansModelSel1d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'kmeansModelSel1d'}]; 
end


try
    close all hidden;
    fprintf('kmeansModelSel2d........................')
    kmeansModelSel2d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'kmeansModelSel2d'}]; 
end


try
    close all hidden;
    fprintf('kmeansYeastDemo.........................')
    kmeansYeastDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'kmeansYeastDemo'}]; 
end


try
    close all hidden;
    fprintf('kmedoidsDemoFaithful....................')
    kmedoidsDemoFaithful;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'kmedoidsDemoFaithful'}]; 
end


try
    close all hidden;
    fprintf('knnClassifyDemo.........................')
    knnClassifyDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'knnClassifyDemo'}]; 
end


try
    close all hidden;
    fprintf('knnClassifyDemo2........................')
    knnClassifyDemo2;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'knnClassifyDemo2'}]; 
end


try
    close all hidden;
    fprintf('knnDensityEstimationDemo................')
    knnDensityEstimationDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'knnDensityEstimationDemo'}]; 
end


try
    close all hidden;
    fprintf('knnVoronoi..............................')
    knnVoronoi;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'knnVoronoi'}]; 
end


try
    close all hidden;
    fprintf('laplacePlotDemo.........................')
    laplacePlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'laplacePlotDemo'}]; 
end


try
    close all hidden;
    fprintf('lassoPathProstate.......................')
    lassoPathProstate;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'lassoPathProstate'}]; 
end


try
    close all hidden;
    fprintf('lassoPostPlot...........................')
    lassoPostPlot;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'lassoPostPlot'}]; 
end


try
    close all hidden;
    fprintf('leastSquaresProjection..................')
    leastSquaresProjection;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'leastSquaresProjection'}]; 
end


try
    close all hidden;
    fprintf('linregAllSubsetsGraycodeDemo............')
    linregAllSubsetsGraycodeDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregAllSubsetsGraycodeDemo'}]; 
end


try
    close all hidden;
    fprintf('linregBFCaterpillar.....................')
    linregBFCaterpillar;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregBFCaterpillar'}]; 
end


try
    close all hidden;
    fprintf('linregBayesCaterpillar..................')
    linregBayesCaterpillar;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregBayesCaterpillar'}]; 
end


try
    close all hidden;
    fprintf('linregCensoredSchmeeHahnDemo............')
    linregCensoredSchmeeHahnDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregCensoredSchmeeHahnDemo'}]; 
end


try
    close all hidden;
    fprintf('linregCvPolyVsRegDemo...................')
    linregCvPolyVsRegDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregCvPolyVsRegDemo'}]; 
end


try
    close all hidden;
    fprintf('linregDemo1.............................')
    linregDemo1;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregDemo1'}]; 
end


try
    close all hidden;
    fprintf('linregFitL1Test.........................')
    linregFitL1Test;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregFitL1Test'}]; 
end


try
    close all hidden;
    fprintf('linregFitL2Test.........................')
    linregFitL2Test;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregFitL2Test'}]; 
end


try
    close all hidden;
    fprintf('linregFitTest...........................')
    linregFitTest;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregFitTest'}]; 
end


try
    close all hidden;
    fprintf('linregFitTestSimple.....................')
    linregFitTestSimple;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregFitTestSimple'}]; 
end


try
    close all hidden;
    fprintf('linregFreqCaterpillar...................')
    linregFreqCaterpillar;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregFreqCaterpillar'}]; 
end


try
    close all hidden;
    fprintf('linregGroupLassoDemo....................')
    linregGroupLassoDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregGroupLassoDemo'}]; 
end


try
    close all hidden;
    fprintf('linregGroupLassoEmDemo..................')
    linregGroupLassoEmDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregGroupLassoEmDemo'}]; 
end


try
    close all hidden;
    fprintf('linregLogTransformDemo..................')
    linregLogTransformDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregLogTransformDemo'}]; 
end


try
    close all hidden;
    fprintf('linregMlcompDemo........................')
    linregMlcompDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregMlcompDemo'}]; 
end


try
    close all hidden;
    fprintf('linregNetlabPolyVsDegreeDemo............')
    linregNetlabPolyVsDegreeDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregNetlabPolyVsDegreeDemo'}]; 
end


try
    close all hidden;
    fprintf('linregNetlabPolyVsNDemo.................')
    linregNetlabPolyVsNDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregNetlabPolyVsNDemo'}]; 
end


try
    close all hidden;
    fprintf('linregNetlabPolyVsRegDemo...............')
    linregNetlabPolyVsRegDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregNetlabPolyVsRegDemo'}]; 
end


try
    close all hidden;
    fprintf('linregOnlineDemoKalman..................')
    linregOnlineDemoKalman;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregOnlineDemoKalman'}]; 
end


try
    close all hidden;
    fprintf('linregPolyVsDegree......................')
    linregPolyVsDegree;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregPolyVsDegree'}]; 
end


try
    close all hidden;
    fprintf('linregPolyVsN...........................')
    linregPolyVsN;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregPolyVsN'}]; 
end


try
    close all hidden;
    fprintf('linregPolyVsReg.........................')
    linregPolyVsReg;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregPolyVsReg'}]; 
end


try
    close all hidden;
    fprintf('linregPostPredDemo......................')
    linregPostPredDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregPostPredDemo'}]; 
end


try
    close all hidden;
    fprintf('linregRbfDemo...........................')
    linregRbfDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregRbfDemo'}]; 
end


try
    close all hidden;
    fprintf('linregRobustDemo........................')
    linregRobustDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregRobustDemo'}]; 
end


try
    close all hidden;
    fprintf('linregSparseEmBiscuitsDemo..............')
    linregSparseEmBiscuitsDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregSparseEmBiscuitsDemo'}]; 
end


try
    close all hidden;
    fprintf('linregStudentStacklossDemo..............')
    linregStudentStacklossDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregStudentStacklossDemo'}]; 
end


try
    close all hidden;
    fprintf('linregStudentTest.......................')
    linregStudentTest;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregStudentTest'}]; 
end


try
    close all hidden;
    fprintf('linregWedgeDemo2........................')
    linregWedgeDemo2;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'linregWedgeDemo2'}]; 
end


try
    close all hidden;
    fprintf('localMinima1d...........................')
    localMinima1d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'localMinima1d'}]; 
end


try
    close all hidden;
    fprintf('logcon..................................')
    logcon;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'logcon'}]; 
end


try
    close all hidden;
    fprintf('logregBasisFnDemo.......................')
    logregBasisFnDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'logregBasisFnDemo'}]; 
end


try
    close all hidden;
    fprintf('logregDemoGirolami......................')
    logregDemoGirolami;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'logregDemoGirolami'}]; 
end


try
    close all hidden;
    fprintf('logregFitTest...........................')
    logregFitTest;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'logregFitTest'}]; 
end


try
    close all hidden;
    fprintf('logregGradeMH...........................')
    logregGradeMH;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'logregGradeMH'}]; 
end


try
    close all hidden;
    fprintf('logregKernelCrabsDemo...................')
    logregKernelCrabsDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'logregKernelCrabsDemo'}]; 
end


try
    close all hidden;
    fprintf('logregL2FitTest.........................')
    logregL2FitTest;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'logregL2FitTest'}]; 
end


try
    close all hidden;
    fprintf('logregMultinomKernelDemo................')
    logregMultinomKernelDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'logregMultinomKernelDemo'}]; 
end


try
    close all hidden;
    fprintf('logregMultinomKernelMinfuncDemo.........')
    logregMultinomKernelMinfuncDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'logregMultinomKernelMinfuncDemo'}]; 
end


try
    close all hidden;
    fprintf('logregMultinomMinfuncDemo...............')
    logregMultinomMinfuncDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'logregMultinomMinfuncDemo'}]; 
end


try
    close all hidden;
    fprintf('logregSATdemo...........................')
    logregSATdemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'logregSATdemo'}]; 
end


try
    close all hidden;
    fprintf('logregXorDemo...........................')
    logregXorDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'logregXorDemo'}]; 
end


try
    close all hidden;
    fprintf('lossFunctionFig.........................')
    lossFunctionFig;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'lossFunctionFig'}]; 
end


try
    close all hidden;
    fprintf('lungcancerGMdemo........................')
    lungcancerGMdemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'lungcancerGMdemo'}]; 
end


try
    close all hidden;
    fprintf('lungcancerGMdemo2.......................')
    lungcancerGMdemo2;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'lungcancerGMdemo2'}]; 
end


try
    close all hidden;
    fprintf('mcEstimatePi............................')
    mcEstimatePi;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mcEstimatePi'}]; 
end


try
    close all hidden;
    fprintf('mcQuantileDemo..........................')
    mcQuantileDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mcQuantileDemo'}]; 
end


try
    close all hidden;
    fprintf('mcmcMvn2d...............................')
    mcmcMvn2d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mcmcMvn2d'}]; 
end


try
    close all hidden;
    fprintf('memoryMapDemo...........................')
    memoryMapDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'memoryMapDemo'}]; 
end


try
    close all hidden;
    fprintf('mhGmmDemo...............................')
    mhGmmDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mhGmmDemo'}]; 
end


try
    close all hidden;
    fprintf('miDemo..................................')
    miDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'miDemo'}]; 
end


try
    close all hidden;
    fprintf('misconceptionRank.......................')
    misconceptionRank;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'misconceptionRank'}]; 
end


try
    close all hidden;
    fprintf('mixBerMnistEM...........................')
    mixBerMnistEM;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixBerMnistEM'}]; 
end


try
    close all hidden;
    fprintf('mixBetaDemo.............................')
    mixBetaDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixBetaDemo'}]; 
end


try
    close all hidden;
    fprintf('mixDirDnaDemo...........................')
    mixDirDnaDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixDirDnaDemo'}]; 
end


try
    close all hidden;
    fprintf('mixDiscreteDemo.........................')
    mixDiscreteDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixDiscreteDemo'}]; 
end


try
    close all hidden;
    fprintf('mixGaussDemoFaithful....................')
    mixGaussDemoFaithful;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixGaussDemoFaithful'}]; 
end


try
    close all hidden;
    fprintf('mixGaussImputationDemo..................')
    mixGaussImputationDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixGaussImputationDemo'}]; 
end


try
    close all hidden;
    fprintf('mixGaussImputationDemoOld...............')
    mixGaussImputationDemoOld;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixGaussImputationDemoOld'}]; 
end


try
    close all hidden;
    fprintf('mixGaussImputationTest..................')
    mixGaussImputationTest;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixGaussImputationTest'}]; 
end


try
    close all hidden;
    fprintf('mixGaussLikSurfaceDemo..................')
    mixGaussLikSurfaceDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixGaussLikSurfaceDemo'}]; 
end


try
    close all hidden;
    fprintf('mixGaussLikelihoodConvexHull............')
    mixGaussLikelihoodConvexHull;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixGaussLikelihoodConvexHull'}]; 
end


try
    close all hidden;
    fprintf('mixGaussMLvsMAP.........................')
    mixGaussMLvsMAP;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixGaussMLvsMAP'}]; 
end


try
    close all hidden;
    fprintf('mixGaussMultiModesPlot..................')
    mixGaussMultiModesPlot;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixGaussMultiModesPlot'}]; 
end


try
    close all hidden;
    fprintf('mixGaussOverRelaxedEmDemo...............')
    mixGaussOverRelaxedEmDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixGaussOverRelaxedEmDemo'}]; 
end


try
    close all hidden;
    fprintf('mixGaussPlotDemo........................')
    mixGaussPlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixGaussPlotDemo'}]; 
end


try
    close all hidden;
    fprintf('mixGaussSingularity.....................')
    mixGaussSingularity;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixGaussSingularity'}]; 
end


try
    close all hidden;
    fprintf('mixGaussVbDemoFaithful..................')
    mixGaussVbDemoFaithful;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixGaussVbDemoFaithful'}]; 
end


try
    close all hidden;
    fprintf('mixPpcaDemoNetlab.......................')
    mixPpcaDemoNetlab;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixPpcaDemoNetlab'}]; 
end


try
    close all hidden;
    fprintf('mixStudentBankruptcyDemo................')
    mixStudentBankruptcyDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixStudentBankruptcyDemo'}]; 
end


try
    close all hidden;
    fprintf('mixStudentBankruptcyDemoHannes..........')
    mixStudentBankruptcyDemoHannes;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixStudentBankruptcyDemoHannes'}]; 
end


try
    close all hidden;
    fprintf('mixdirDemo3.............................')
    mixdirDemo3;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mixdirDemo3'}]; 
end


try
    close all hidden;
    fprintf('mlpClassifDemoSchmidt...................')
    mlpClassifDemoSchmidt;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mlpClassifDemoSchmidt'}]; 
end


try
    close all hidden;
    fprintf('mlpPriorsDemo...........................')
    mlpPriorsDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mlpPriorsDemo'}]; 
end


try
    close all hidden;
    fprintf('mlpRegEvidenceDemo......................')
    mlpRegEvidenceDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mlpRegEvidenceDemo'}]; 
end


try
    close all hidden;
    fprintf('mlpRegHmcDemo...........................')
    mlpRegHmcDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mlpRegHmcDemo'}]; 
end


try
    close all hidden;
    fprintf('mlpRegressDemo..........................')
    mlpRegressDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mlpRegressDemo'}]; 
end


try
    close all hidden;
    fprintf('mlpRegressDemoBishop....................')
    mlpRegressDemoBishop;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mlpRegressDemoBishop'}]; 
end


try
    close all hidden;
    fprintf('mlpRegressDemoSchmidt...................')
    mlpRegressDemoSchmidt;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mlpRegressDemoSchmidt'}]; 
end


try
    close all hidden;
    fprintf('mnist1NNdemo............................')
    mnist1NNdemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'mnist1NNdemo'}]; 
end


try
    close all hidden;
    fprintf('multinomIndepLogBF......................')
    multinomIndepLogBF;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'multinomIndepLogBF'}]; 
end


try
    close all hidden;
    fprintf('multinomSamplePlotDemo..................')
    multinomSamplePlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'multinomSamplePlotDemo'}]; 
end


try
    close all hidden;
    fprintf('multitaskRegDemo........................')
    multitaskRegDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'multitaskRegDemo'}]; 
end


try
    close all hidden;
    fprintf('naiveBayesBayesianDemo..................')
    naiveBayesBayesianDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'naiveBayesBayesianDemo'}]; 
end


try
    close all hidden;
    fprintf('naiveBayesBowDemo.......................')
    naiveBayesBowDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'naiveBayesBowDemo'}]; 
end


try
    close all hidden;
    fprintf('naiveBayesMnistDemo.....................')
    naiveBayesMnistDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'naiveBayesMnistDemo'}]; 
end


try
    close all hidden;
    fprintf('naiveBayesMnistSample...................')
    naiveBayesMnistSample;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'naiveBayesMnistSample'}]; 
end


try
    close all hidden;
    fprintf('newcombDemo.............................')
    newcombDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'newcombDemo'}]; 
end


try
    close all hidden;
    fprintf('newsgroupsVisualize.....................')
    newsgroupsVisualize;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'newsgroupsVisualize'}]; 
end


try
    close all hidden;
    fprintf('newtonIteration1d.......................')
    newtonIteration1d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'newtonIteration1d'}]; 
end


try
    close all hidden;
    fprintf('newtonsMethodMin1d......................')
    newtonsMethodMin1d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'newtonsMethodMin1d'}]; 
end


try
    close all hidden;
    fprintf('newtonsMethodMinQuad....................')
    newtonsMethodMinQuad;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'newtonsMethodMinQuad'}]; 
end


try
    close all hidden;
    fprintf('newtonsMethodNonConvex..................')
    newtonsMethodNonConvex;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'newtonsMethodNonConvex'}]; 
end


try
    close all hidden;
    fprintf('neymanPearson...........................')
    neymanPearson;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'neymanPearson'}]; 
end


try
    close all hidden;
    fprintf('neymanPearson2..........................')
    neymanPearson2;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'neymanPearson2'}]; 
end


try
    close all hidden;
    fprintf('ngramPlot...............................')
    ngramPlot;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'ngramPlot'}]; 
end


try
    close all hidden;
    fprintf('nonConvexFn.............................')
    nonConvexFn;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'nonConvexFn'}]; 
end


try
    close all hidden;
    fprintf('normalGammaPenaltyPlotDemo..............')
    normalGammaPenaltyPlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'normalGammaPenaltyPlotDemo'}]; 
end


try
    close all hidden;
    fprintf('normalGammaPlotDemo.....................')
    normalGammaPlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'normalGammaPlotDemo'}]; 
end


try
    close all hidden;
    fprintf('normalGammaThresholdPlotDemo............')
    normalGammaThresholdPlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'normalGammaThresholdPlotDemo'}]; 
end


try
    close all hidden;
    fprintf('numbersGame.............................')
    numbersGame;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'numbersGame'}]; 
end


try
    close all hidden;
    fprintf('optLowerbound...........................')
    optLowerbound;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'optLowerbound'}]; 
end


try
    close all hidden;
    fprintf('optMaxLambdaVal.........................')
    optMaxLambdaVal;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'optMaxLambdaVal'}]; 
end


try
    close all hidden;
    fprintf('pagerankDemoMoler.......................')
    pagerankDemoMoler;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pagerankDemoMoler'}]; 
end


try
    close all hidden;
    fprintf('pagerankDemoPmtk........................')
    pagerankDemoPmtk;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pagerankDemoPmtk'}]; 
end


try
    close all hidden;
    fprintf('pagerankpow.............................')
    pagerankpow;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pagerankpow'}]; 
end


try
    close all hidden;
    fprintf('pairedTestDemo..........................')
    pairedTestDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pairedTestDemo'}]; 
end


try
    close all hidden;
    fprintf('pairedVsUnpairedTestDemo................')
    pairedVsUnpairedTestDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pairedVsUnpairedTestDemo'}]; 
end


try
    close all hidden;
    fprintf('paretoDemoTaxicab.......................')
    paretoDemoTaxicab;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'paretoDemoTaxicab'}]; 
end


try
    close all hidden;
    fprintf('paretoPlot..............................')
    paretoPlot;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'paretoPlot'}]; 
end


try
    close all hidden;
    fprintf('parzenWindowDemo........................')
    parzenWindowDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'parzenWindowDemo'}]; 
end


try
    close all hidden;
    fprintf('pcaDemo2d...............................')
    pcaDemo2d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pcaDemo2d'}]; 
end


try
    close all hidden;
    fprintf('pcaDemo2dto10d..........................')
    pcaDemo2dto10d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pcaDemo2dto10d'}]; 
end


try
    close all hidden;
    fprintf('pcaDemo3d...............................')
    pcaDemo3d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pcaDemo3d'}]; 
end


try
    close all hidden;
    fprintf('pcaDemoHeightWeight.....................')
    pcaDemoHeightWeight;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pcaDemoHeightWeight'}]; 
end


try
    close all hidden;
    fprintf('pcaDigitsVis10classes...................')
    pcaDigitsVis10classes;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pcaDigitsVis10classes'}]; 
end


try
    close all hidden;
    fprintf('pcaDigitsVisGrid........................')
    pcaDigitsVisGrid;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pcaDigitsVisGrid'}]; 
end


try
    close all hidden;
    fprintf('pcaEmTest...............................')
    pcaEmTest;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pcaEmTest'}]; 
end


try
    close all hidden;
    fprintf('pcaFaceDemo.............................')
    pcaFaceDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pcaFaceDemo'}]; 
end


try
    close all hidden;
    fprintf('pcaImageDemo............................')
    pcaImageDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pcaImageDemo'}]; 
end


try
    close all hidden;
    fprintf('pcaOverfitDemo..........................')
    pcaOverfitDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pcaOverfitDemo'}]; 
end


try
    close all hidden;
    fprintf('pcaTimingTest...........................')
    pcaTimingTest;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'pcaTimingTest'}]; 
end


try
    close all hidden;
    fprintf('peaksPlotDemo...........................')
    peaksPlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'peaksPlotDemo'}]; 
end


try
    close all hidden;
    fprintf('piecewiseLinearSurface..................')
    piecewiseLinearSurface;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'piecewiseLinearSurface'}]; 
end


try
    close all hidden;
    fprintf('plotDirichlet3d.........................')
    plotDirichlet3d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'plotDirichlet3d'}]; 
end


try
    close all hidden;
    fprintf('plotMFCC................................')
    plotMFCC;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'plotMFCC'}]; 
end


try
    close all hidden;
    fprintf('plotNoLocalMin..........................')
    plotNoLocalMin;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'plotNoLocalMin'}]; 
end


try
    close all hidden;
    fprintf('plotPdfCdfDemo..........................')
    plotPdfCdfDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'plotPdfCdfDemo'}]; 
end


try
    close all hidden;
    fprintf('poissonPlotDemo.........................')
    poissonPlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'poissonPlotDemo'}]; 
end


try
    close all hidden;
    fprintf('polyfitNoErrorBars......................')
    polyfitNoErrorBars;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'polyfitNoErrorBars'}]; 
end


try
    close all hidden;
    fprintf('postDensityIntervals....................')
    postDensityIntervals;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'postDensityIntervals'}]; 
end


try
    close all hidden;
    fprintf('powerMethodDemo.........................')
    powerMethodDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'powerMethodDemo'}]; 
end


try
    close all hidden;
    fprintf('ppcaDemo2d..............................')
    ppcaDemo2d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'ppcaDemo2d'}]; 
end


try
    close all hidden;
    fprintf('ppcaDemoNetlab..........................')
    ppcaDemoNetlab;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'ppcaDemoNetlab'}]; 
end


try
    close all hidden;
    fprintf('ppcaDemoOilflowMissing..................')
    ppcaDemoOilflowMissing;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'ppcaDemoOilflowMissing'}]; 
end


try
    close all hidden;
    fprintf('ppcaEmTest..............................')
    ppcaEmTest;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'ppcaEmTest'}]; 
end


try
    close all hidden;
    fprintf('ppcaEvidenceDemo........................')
    ppcaEvidenceDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'ppcaEvidenceDemo'}]; 
end


try
    close all hidden;
    fprintf('ppcaVBdemo..............................')
    ppcaVBdemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'ppcaVBdemo'}]; 
end


try
    close all hidden;
    fprintf('probitRegDemo...........................')
    probitRegDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'probitRegDemo'}]; 
end


try
    close all hidden;
    fprintf('probitVsLogregCrabsDemo.................')
    probitVsLogregCrabsDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'probitVsLogregCrabsDemo'}]; 
end


try
    close all hidden;
    fprintf('prostateComparison......................')
    prostateComparison;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'prostateComparison'}]; 
end


try
    close all hidden;
    fprintf('prostateScatterDemo.....................')
    prostateScatterDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'prostateScatterDemo'}]; 
end


try
    close all hidden;
    fprintf('prostateSubsets.........................')
    prostateSubsets;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'prostateSubsets'}]; 
end


try
    close all hidden;
    fprintf('qpDemo..................................')
    qpDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'qpDemo'}]; 
end


try
    close all hidden;
    fprintf('quantileDemo............................')
    quantileDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'quantileDemo'}]; 
end


try
    close all hidden;
    fprintf('randomWalk0to20Demo.....................')
    randomWalk0to20Demo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'randomWalk0to20Demo'}]; 
end


try
    close all hidden;
    fprintf('rankDefDemo.............................')
    rankDefDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'rankDefDemo'}]; 
end


try
    close all hidden;
    fprintf('rbfGramDemo.............................')
    rbfGramDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'rbfGramDemo'}]; 
end


try
    close all hidden;
    fprintf('rbfNetworkSarcosDemo....................')
    rbfNetworkSarcosDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'rbfNetworkSarcosDemo'}]; 
end


try
    close all hidden;
    fprintf('relevanceNetworkNewsgroupDemo...........')
    relevanceNetworkNewsgroupDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'relevanceNetworkNewsgroupDemo'}]; 
end


try
    close all hidden;
    fprintf('residualsDemo...........................')
    residualsDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'residualsDemo'}]; 
end


try
    close all hidden;
    fprintf('ridgePathProstate.......................')
    ridgePathProstate;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'ridgePathProstate'}]; 
end


try
    close all hidden;
    fprintf('riskFnBernoulli.........................')
    riskFnBernoulli;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'riskFnBernoulli'}]; 
end


try
    close all hidden;
    fprintf('riskFnGauss.............................')
    riskFnGauss;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'riskFnGauss'}]; 
end


try
    close all hidden;
    fprintf('robustDemo..............................')
    robustDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'robustDemo'}]; 
end


try
    close all hidden;
    fprintf('robustPdfPlot...........................')
    robustPdfPlot;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'robustPdfPlot'}]; 
end


try
    close all hidden;
    fprintf('rosen2d.................................')
    rosen2d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'rosen2d'}]; 
end


try
    close all hidden;
    fprintf('rotationDemo............................')
    rotationDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'rotationDemo'}]; 
end


try
    close all hidden;
    fprintf('saCoolingSchedule.......................')
    saCoolingSchedule;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'saCoolingSchedule'}]; 
end


try
    close all hidden;
    fprintf('saDemoCamel.............................')
    saDemoCamel;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'saDemoCamel'}]; 
end


try
    close all hidden;
    fprintf('saDemoHisto.............................')
    saDemoHisto;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'saDemoHisto'}]; 
end


try
    close all hidden;
    fprintf('saDemoMOG...............................')
    saDemoMOG;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'saDemoMOG'}]; 
end


try
    close all hidden;
    fprintf('saDemoPeaks.............................')
    saDemoPeaks;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'saDemoPeaks'}]; 
end


try
    close all hidden;
    fprintf('saddle..................................')
    saddle;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'saddle'}]; 
end


try
    close all hidden;
    fprintf('samplingDistGaussShrinkage..............')
    samplingDistGaussShrinkage;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'samplingDistGaussShrinkage'}]; 
end


try
    close all hidden;
    fprintf('scadPlot................................')
    scadPlot;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'scadPlot'}]; 
end


try
    close all hidden;
    fprintf('sensorFusion2d..........................')
    sensorFusion2d;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'sensorFusion2d'}]; 
end


try
    close all hidden;
    fprintf('sensorFusionUnknownPrec.................')
    sensorFusionUnknownPrec;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'sensorFusionUnknownPrec'}]; 
end


try
    close all hidden;
    fprintf('seqlogoDemo.............................')
    seqlogoDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'seqlogoDemo'}]; 
end


try
    close all hidden;
    fprintf('shatteredSin............................')
    shatteredSin;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'shatteredSin'}]; 
end


try
    close all hidden;
    fprintf('shrinkageDemoBaseball...................')
    shrinkageDemoBaseball;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'shrinkageDemoBaseball'}]; 
end


try
    close all hidden;
    fprintf('shrinkcovDemo...........................')
    shrinkcovDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'shrinkcovDemo'}]; 
end


try
    close all hidden;
    fprintf('shrunkenCentroidsSRBCTdemo..............')
    shrunkenCentroidsSRBCTdemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'shrunkenCentroidsSRBCTdemo'}]; 
end


try
    close all hidden;
    fprintf('shuffledDigitsDemo......................')
    shuffledDigitsDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'shuffledDigitsDemo'}]; 
end


try
    close all hidden;
    fprintf('sigmoidPlot.............................')
    sigmoidPlot;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'sigmoidPlot'}]; 
end


try
    close all hidden;
    fprintf('sigmoidplot2D...........................')
    sigmoidplot2D;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'sigmoidplot2D'}]; 
end


try
    close all hidden;
    fprintf('softmaxDemo2............................')
    softmaxDemo2;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'softmaxDemo2'}]; 
end


try
    close all hidden;
    fprintf('sparseLinRegBabackDemo..................')
    sparseLinRegBabackDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'sparseLinRegBabackDemo'}]; 
end


try
    close all hidden;
    fprintf('sparseLinRegMargDistDemo................')
    sparseLinRegMargDistDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'sparseLinRegMargDistDemo'}]; 
end


try
    close all hidden;
    fprintf('sparseSensingDemo.......................')
    sparseSensingDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'sparseSensingDemo'}]; 
end


try
    close all hidden;
    fprintf('sprinklerGMdemo.........................')
    sprinklerGMdemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'sprinklerGMdemo'}]; 
end


try
    close all hidden;
    fprintf('steepestDescentDemo.....................')
    steepestDescentDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'steepestDescentDemo'}]; 
end


try
    close all hidden;
    fprintf('steepestDescentDemoRss..................')
    steepestDescentDemoRss;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'steepestDescentDemoRss'}]; 
end


try
    close all hidden;
    fprintf('studentFitDemo..........................')
    studentFitDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'studentFitDemo'}]; 
end


try
    close all hidden;
    fprintf('studentFitMultiDemo.....................')
    studentFitMultiDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'studentFitMultiDemo'}]; 
end


try
    close all hidden;
    fprintf('studentPlotDemo.........................')
    studentPlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'studentPlotDemo'}]; 
end


try
    close all hidden;
    fprintf('studentVsGauss..........................')
    studentVsGauss;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'studentVsGauss'}]; 
end


try
    close all hidden;
    fprintf('subgradient.............................')
    subgradient;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'subgradient'}]; 
end


try
    close all hidden;
    fprintf('surfaceFitDemo..........................')
    surfaceFitDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'surfaceFitDemo'}]; 
end


try
    close all hidden;
    fprintf('surfer..................................')
    surfer;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'surfer'}]; 
end


try
    close all hidden;
    fprintf('svdImageDemo............................')
    svdImageDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'svdImageDemo'}]; 
end


try
    close all hidden;
    fprintf('svmBinaryClassifBishopDemo..............')
    svmBinaryClassifBishopDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'svmBinaryClassifBishopDemo'}]; 
end


try
    close all hidden;
    fprintf('svmCgammaDemo...........................')
    svmCgammaDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'svmCgammaDemo'}]; 
end


try
    close all hidden;
    fprintf('svmCrabsDemo............................')
    svmCrabsDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'svmCrabsDemo'}]; 
end


try
    close all hidden;
    fprintf('svmFitTest..............................')
    svmFitTest;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'svmFitTest'}]; 
end


try
    close all hidden;
    fprintf('svmLogregComparison.....................')
    svmLogregComparison;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'svmLogregComparison'}]; 
end


try
    close all hidden;
    fprintf('svmOneVsRestDemo........................')
    svmOneVsRestDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'svmOneVsRestDemo'}]; 
end


try
    close all hidden;
    fprintf('svmRegrDemo.............................')
    svmRegrDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'svmRegrDemo'}]; 
end


try
    close all hidden;
    fprintf('svmSmoothRegrDemo.......................')
    svmSmoothRegrDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'svmSmoothRegrDemo'}]; 
end


try
    close all hidden;
    fprintf('tanhPlot................................')
    tanhPlot;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'tanhPlot'}]; 
end


try
    close all hidden;
    fprintf('testSprinklerDemo.......................')
    testSprinklerDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'testSprinklerDemo'}]; 
end


try
    close all hidden;
    fprintf('tikhonovDemo............................')
    tikhonovDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'tikhonovDemo'}]; 
end


try
    close all hidden;
    fprintf('twoPowerCurves..........................')
    twoPowerCurves;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'twoPowerCurves'}]; 
end


try
    close all hidden;
    fprintf('unigaussVbDemo..........................')
    unigaussVbDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'unigaussVbDemo'}]; 
end


try
    close all hidden;
    fprintf('unpairedTestHandednessDemo..............')
    unpairedTestHandednessDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'unpairedTestHandednessDemo'}]; 
end


try
    close all hidden;
    fprintf('varSelDemo..............................')
    varSelDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'varSelDemo'}]; 
end


try
    close all hidden;
    fprintf('vqDemo..................................')
    vqDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'vqDemo'}]; 
end


try
    close all hidden;
    fprintf('wiPlotDemo..............................')
    wiPlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'wiPlotDemo'}]; 
end


try
    close all hidden;
    fprintf('wishPlotDemo............................')
    wishPlotDemo;
    fprintf('PASS\n')
catch %#ok
    fprintf('ERROR')
    errors = [errors, {'wishPlotDemo'}]; 
end


